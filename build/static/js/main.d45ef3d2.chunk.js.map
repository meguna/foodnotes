{"version":3,"sources":["i18n.js","modules/auth/Auth.jsx","modules/helpers/index.jsx","modules/Actions/index.js","modules/Actions/ActionTypes.js","modules/common/initial.jsx","modules/RecipeInfo/components/Ingredients.jsx","modules/RecipeInfo/components/IngredientGroup.jsx","modules/RecipeInfo/components/RecipeNotes.jsx","modules/RecipeInfo/components/RecipeSize.jsx","modules/RecipeInfo/components/AddRecipeButton.jsx","modules/RecipeInfo/components/EditRecipeButton.jsx","modules/RecipeInfo/components/DeleteRecipeButton.jsx","modules/RecipeInfo/components/RecipeImages.jsx","modules/RecipeInfo/view.jsx","modules/RecipeInfo/index.jsx","modules/RecipeList/components/LoadMoreButton.jsx","modules/RecipeList/view.jsx","modules/RecipeList/index.jsx","modules/RecipeForm/components/Field.jsx","modules/RecipeForm/components/IngField.jsx","modules/RecipeForm/components/IngGroup.jsx","modules/RecipeForm/components/IngFieldsHeader.jsx","modules/common/StatusInfoLogic.jsx","modules/common/StatusInfo.jsx","modules/RecipeForm/components/ImageUpload.jsx","modules/RecipeForm/components/RecipeImages.jsx","modules/RecipeForm/components/FormSubHeader.jsx","modules/RecipeForm/view.jsx","modules/RecipeForm/index.jsx","modules/NewRecipeForm/view.jsx","modules/NewRecipeForm/index.jsx","modules/EditRecipeForm/view.jsx","modules/EditRecipeForm/index.jsx","modules/DeleteRecipe/view.jsx","modules/DeleteRecipe/index.jsx","modules/NoSelectedRecipe/view.jsx","modules/NoSelectedRecipe/index.jsx","modules/errorBoundaries/RecipeInfoErrorBoundary.jsx","modules/errorBoundaries/RecipeListErrorBoundary.jsx","modules/RecipeIndex/view.jsx","modules/RecipeIndex/index.jsx","modules/errorBoundaries/AppErrorBoundary.jsx","modules/auth/Login.jsx","modules/auth/Logout.jsx","modules/auth/Signup.jsx","modules/Welcome/components/LangChange.jsx","modules/Welcome/index.jsx","modules/AccountSettings/components/Modal.jsx","modules/AccountSettings/view.jsx","modules/AccountSettings/index.jsx","modules/auth/AuthButton.jsx","modules/common/Header.jsx","AppView.jsx","App.js","serviceWorker.js","modules/Reducers/index.js","index.js"],"names":["i18n","use","initReactI18next","init","fallbackLng","lng","debug","interpolation","escapeValue","resources","en","common","commonEn","ja","commonJa","auth0Client","Auth","Object","classCallCheck","this","auth0","WebAuth","domain","authConfig","audience","apiAudience","clientID","clientId","redirectUri","rootUri","responseType","scope","responseMode","getProfile","bind","handleAuthentication","isAuthenticated","signIn","signOut","profile","idToken","_this","Promise","resolve","reject","undefined","accessToken","silentAuth","then","res","catch","err","Date","getTime","expiresAt","lockJs","allowSignUp","initialScreen","allowLogin","allowShowPassword","additionalSignUpFields","name","placeholder","type","value","language","emailPrefill","closable","prefill","email","additionalOptions","_this2","sessionStorage","getItem","nonce","Math","floor","random","setItem","options","autoclose","avatar","allowedConnections","loginAfterSignUp","usernameStyle","theme","primaryColor","languageDictionary","title","auth","redirect","redirectUrl","params","state","allOptions","assign","lock","Auth0Lock","show","on","authResult","Error","setSession","removeItem","getUserInfo","hide","flashMessage","text","errorDescription","console","error","_this3","parseHash","_this4","checkSession","userMetadata","_this5","auth0Manage","Management","token","patchUserMetadata","sub","e2","ar2","user_metadata","idTokenPayload","exp","logout","returnTo","callApi","endpoint","Auth0Client","getToken","headers","Authorization","concat","fetchOptions","fetch","ok","statusText","json","code","hs","HashId","fetchRecipes","sortMethod","dispatch","payload","fetchRecipesStart","fetchMoreRecipesStart","setSelectedRecipe","id","setRecipe","setNotification","status","message","payloadMessage","payloadStatus","setNotificationDetails","loginSuccess","loginFailure","login","ING_FIELD_BLANK","amount","notes","groupId","elemId","ING_GROUP_BLANK","Ingredient","_ref","ingredient","amountArray","split","length","map","str","i","react_default","a","createElement","key","className","amount_unit","defaultProps","objectSpread","IngredientGroup","ingredients","groups","groupCount","t","screen","useTranslation","ingredientGroups","_loop","push","filter","item","dottedBorderClass","react","group","j","Ingredients","RecipeNotes","React","memo","RecipeSize","size","react_router_dom","to","dist","RecipeImages","images","image","src","imagePath","alt","RecipeInfo","props","possibleConstructorReturn","getPrototypeOf","call","info","loadingInfo","fetchError","_this$props","match","selectedId","history","loadingAuth","paramId","decode","fetchRecipeInfo","prevProps","prevState","_this$props2","setState","_this$props3","_this$state","hashid","encode","components_AddRecipeButton","components_EditRecipeButton","components_DeleteRecipeButton","components_RecipeSize","components_IngredientGroup","components_RecipeNotes","components_RecipeImages","Component","withRouter","mapDispatchToProps","connect","onAction","loading","cursorClass","func","role","tabIndex","onClick","onKeyDown","RecipeList","searchMode","sQuery","onSortSelect","assertThisInitialized","onSearchChange","onLoadMore","event","fetchQuickSearch","target","_this2$state","e","query","_this$props4","fetchMoreRecipes","listOffset","recipes","_this$props5","noMoreResults","_this$state2","onChange","recipe","onRecipeClick","components_LoadMoreButton","withTranslation","offset","offsetParam","fetchQuickSearchStart","fetchMoreQuickSearchSuccess","Field","handleChange","labelClassName","textarea","invalid","validString","onBlur","outerClassName","required","labelname","TagType","validClass","htmlFor","PureComponent","IngField","handleNameChange","handleAmtChange","handleNotesChange","handleFocus","handleBlur","removeFields","preventDefault","ingId","onFocus","_this$props6","onRemoveSelected","_this$props7","IngGroup","onIngFieldChange","param","val","groupInfo","onIngGroupUpdate","ing","JSON","parse","stringify","onFieldChange","defineProperty","addIngField","toConsumableArray","removeEmptyIngField","newIng","pop","removeSelectedIngField","onRemoveGroup","splice","_this$state3","_this$state4","ingFields","components_IngField","components_Field","IngFieldsHeader","StatusInfo","hiddenClass","statusClass","isHidden","decay","timeout","setTimeout","clearTimeout","StatusInfoLogic","MAX_FILE_SIZE","MAX_FILE_COUNT","MAX_FILE_NAME_LENGTH","ImageUpload","onImageChosen","stopPropagation","onDone","imageCount","data","FormData","fail","Array","from","files","forEach","file","statusMessage","warn","warnMessage","count","append","method","body","log","accept","multiple","common_StatusInfo","onImageUpload","imagePathArray","onImageStateUpdate","newImages","lastId","path","newImageState","onImageDelete","components_ImageUpload","FormSubHeader","subtitle","RecipeForm","validate","onAddGroup","groupIndex","ingRemoved","slice","groupRemoved","ingReindex","ingGroup","groupReindex","updateImageState","onSubmit","stateOnSubmit","fetchUrl","messages","submitError","ingCollect","apply","groupCollect","Content-Type","window","scrollTo","failMessage","initialState","initialGroups","initialIngredients","initialImages","submitStatus","ingCount","groupFields","components_IngGroup","components_FormSubHeader","autoComplete","components_IngFieldsHeader","RecipeForm_components_RecipeImages","buttonAction","NewRecipeForm","recipeInfo","successMessage","modules_RecipeForm","initialFormState","EditRecipeForm","form","fetchInfo","ings","ingGroups","counter","DeleteRecipe","deleteRecipe","deleteStatus","deleteMessage","dynamicMessage","NoSelectedRecipe","RecipeInfoErrorBoundary","hasError","children","RecipeListErrorBoundary","RecipeIndex","notification","react_router","exact","render","errorBoundaries_RecipeListErrorBoundary","modules_RecipeList","component","errorBoundaries_RecipeInfoErrorBoundary","modules_RecipeInfo","renderMobile","AppErrorBoundary","Login","Logout","Signup","signup","signUp","LangChange","onLangSelect","changeLanguage","document","documentElement","setAttribute","Welcome","components_LangChange","srcSet","href","Modal","langVal","fieldVal","errorStatus","handlePassChange","closeModal","handleSubmit","fieldParamName","toggleModal","userData","nickname","patchUserData","location","reload","desc","formInputElem","defaultValue","AccountSettings","isModalOpen","modal","setEmailModal","setNameModal","setLangModal","shouldResetProfile","setProfile","langName","components_Modal","resetPassword","AuthButton","Header","isMenuOpen","toggleMenu","color","renderMenuItems","pathname","auth_AuthButton","App","handleResize","checkAuthStatus","lang","addEventListener","removeEventListener","setScreen","innerWidth","common_Header","errorBoundaries_AppErrorBoundary","modules_RecipeIndex","cb","Boolean","hostname","INITIAL_STATE","reducer","arguments","action","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d45ef3d2.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport commonEn from './translations/common_en.json';\nimport commonJa from './translations/common_ja.json';\n\n// import Backend from 'i18next-xhr-backend';\n// import LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n\n  .use(initReactI18next)\n  .init({\n    fallbackLng: 'en',\n    lng: 'en',\n    debug: false,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    resources: {\n      en: {\n        common: commonEn,\n      },\n      ja: {\n        common: commonJa,\n      },\n    },\n  });\n\nexport default i18n;\n","import auth0 from 'auth0-js';\nimport Auth0Lock from 'auth0-lock';\nimport i18n from '../../i18n';\nimport authConfig from '../../auth_config.json';\n\nclass Auth {\n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n      domain: authConfig.domain,\n      audience: authConfig.apiAudience,\n      clientID: authConfig.clientId,\n      redirectUri: authConfig.rootUri,\n      responseType: 'id_token token',\n      scope: 'openid profile email user_metadata',\n      responseMode: 'web_message',\n    });\n\n    this.getProfile = this.getProfile.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.signIn = this.signIn.bind(this);\n    this.signOut = this.signOut.bind(this);\n  }\n\n  getProfile() {\n    return this.profile;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  getToken() {\n    return new Promise((resolve, reject) => {\n      if (this.accessToken !== undefined && this.isAuthenticated()) {\n        resolve(this.accessToken);\n      } else {\n        this.silentAuth()\n          .then((res) => {\n            resolve(res.accessToken);\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      }\n    });\n  }\n\n  isAuthenticated() {\n    return new Date().getTime() < this.expiresAt;\n  }\n\n  signIn() {\n    return this.lockJs({\n      allowSignUp: false,\n      initialScreen: 'login',\n    });\n  }\n\n  /* IMPORTANT\n   * the user's language preference is stored as \"nickname\" because\n   * per auth0 rules, items stored in user_metadata cannot be accessed through\n   * auth0.js. Basic params like nickname, name, given_name, etc are available\n   * to access from auth0.js. Since I already do silent authentication with\n   * auth0.js every time a user navigates to the app, it seems too costly to do\n   * an operation with the management api every time as well. However, I still\n   * need to access the language parameter every time the user navigates to\n   * the app so that I can tell react-i18n which language to use.\n   */\n  signUp() {\n    return this.lockJs({\n      allowLogin: false,\n      initialScreen: 'signUp',\n      allowShowPassword: true,\n      additionalSignUpFields: [{\n        name: 'name',\n        placeholder: 'your name',\n      }, {\n        type: 'hidden',\n        name: 'nickname',\n        value: i18n.language,\n      }],\n    });\n  }\n\n  resetPassword(emailPrefill) {\n    return this.lockJs({\n      allowLogin: false,\n      allowSignUp: false,\n      initialScreen: 'forgotPassword',\n      closable: true,\n      prefill: {\n        email: emailPrefill,\n      },\n    });\n  }\n\n  lockJs(additionalOptions) {\n    if (sessionStorage.getItem('stateid') === null) {\n      const nonce = Math.floor(Math.random() * 100000);\n      sessionStorage.setItem('stateid', nonce);\n    }\n    const options = {\n      language: i18n.language || 'en',\n      closable: false,\n      autoclose: true,\n      avatar: null,\n      allowedConnections: ['Username-Password-Authentication'],\n      loginAfterSignUp: true,\n      usernameStyle: 'email',\n      theme: {\n        primaryColor: '#FF320C',\n      },\n      languageDictionary: {\n        title: 'Log In to Foodnotes',\n      },\n      auth: {\n        redirect: true,\n        redirectUrl: authConfig.rootUri,\n        params: {\n          state: sessionStorage.getItem('stateid'),\n        },\n      },\n    };\n    const allOptions = Object.assign(options, additionalOptions);\n    const lock = new Auth0Lock(\n      authConfig.clientId,\n      authConfig.domain,\n      allOptions,\n    );\n    lock.show();\n\n    return new Promise((resolve, reject) => {\n      lock.on('authenticated', (authResult) => {\n        if (authResult.state !== sessionStorage.getItem('stateid')) {\n          reject(new Error('state mismatch error'));\n        } else {\n          this.setSession(authResult);\n          sessionStorage.removeItem('stateid');\n          lock.getUserInfo(authResult.accessToken, (err, profile) => {\n            if (err) {\n              reject(err);\n            }\n            resolve(profile);\n            lock.hide();\n          });\n        }\n      });\n      lock.on('unrecoverable_error', (err) => {\n        lock.show({\n          flashMessage: {\n            type: 'error',\n            text: err.errorDescription,\n          },\n        });\n        console.error(err);\n        reject(err);\n      });\n      lock.on('authorization_error', (err) => {\n        lock.show({\n          flashMessage: {\n            type: 'error',\n            text: err.errorDescription,\n          },\n        });\n        console.error(err);\n        reject(err);\n      });\n    });\n  }\n\n\n  handleAuthentication() {\n    return new Promise((resolve, reject) => {\n      this.auth0.parseHash((err, authResult) => {\n        if (err) return reject(err);\n        if (!authResult || !authResult.idToken) {\n          return reject(err);\n        }\n        this.setSession(authResult);\n        return resolve();\n      });\n    });\n  }\n\n  silentAuth() {\n    return new Promise((resolve, reject) => {\n      this.auth0.checkSession({}, (err, authResult) => {\n        if (err) {\n          reject(err);\n        } else {\n          this.setSession(authResult);\n          return resolve(authResult);\n        }\n      });\n    });\n  }\n\n  patchUserData(userMetadata) {\n    return new Promise((resolve, reject) => {\n      this.auth0.checkSession({\n        audience: 'https://dev-jknyt6s8.auth0.com/api/v2/',\n        scope: 'read:current_user update:current_user_identities create:current_user_metadata update:current_user_metadata delete:current_user_metadata create:current_user_device_credentials delete:current_user_device_credentials',\n      }, (err, authResult) => {\n        if (err) {\n          console.error(err);\n          reject(err);\n        }\n        const auth0Manage = new auth0.Management({\n          domain: 'dev-jknyt6s8.auth0.com',\n          token: authResult.accessToken,\n        });\n        auth0Manage.patchUserMetadata(this.profile.sub, userMetadata, (e2, ar2) => {\n          if (e2) {\n            console.error(e2);\n          }\n          /* Takes a moment for the rules in auth0's backend to finish running.\n           * The rules make sure that user metadata matches user root data.\n           * Below code runs it manually on this end so users see immediate feedback.\n           */\n          if (ar2.user_metadata.name) {\n            this.profile.name = ar2.user_metadata.name;\n          }\n          if (ar2.user_metadata.email) {\n            this.profile.email = ar2.user_metadata.email;\n          }\n          return resolve(auth0Manage);\n        });\n      });\n    });\n  }\n\n  setSession(authResult) {\n    this.idToken = authResult.idToken;\n    this.accessToken = authResult.accessToken;\n    this.profile = authResult.idTokenPayload;\n    this.expiresAt = authResult.idTokenPayload.exp * 1000;\n  }\n\n  signOut() {\n    this.idToken = null;\n    this.profile = null;\n    this.expiresAt = null;\n    this.auth0.logout({\n      returnTo: authConfig.rootUri,\n      clientID: authConfig.clientId,\n    });\n  }\n}\n\nconst auth0Client = new Auth();\n\nexport default auth0Client;\n","import HashId from 'hashids';\nimport Auth0Client from '../auth/Auth';\n\nexport const API_ROOT = 'http://localhost:3010/api';\n\nexport const callApi = (endpoint, options) => {\n  return new Promise((resolve, reject) => {\n    Auth0Client.getToken().then((token) => {\n      /* combine headers from options parameter */\n      let headers = {\n        Authorization: `Bearer ${token}`,\n      };\n      if (options && options.headers) {\n        headers = Object.assign({}, headers, options.headers);\n      }\n      /* combine all fetch options, including headers */\n      let fetchOptions = { headers };\n      if (options) {\n        fetchOptions = Object.assign({}, options, { headers });\n      }\n      fetch(`${API_ROOT}${endpoint}`, fetchOptions)\n        .then((res) => {\n          if (!res.ok) {\n            throw new Error(res.statusText);\n          }\n          return res;\n        })\n        .then(res => res.json())\n        .then(res => resolve(res))\n        .catch((err) => {\n          if (err.code !== 'login_required') {\n            console.error(err);\n            reject(err);\n          }\n        });\n    })\n      .catch((err) => {\n        if (err.code !== 'login_required') {\n          console.error(err);\n          reject(err);\n        }\n      });\n  });\n};\n\nexport const hs = new HashId('Mood for Food', 5);\n","import {\n  FETCH_RECIPES_START,\n  FETCH_RECIPES_SUCCESS,\n  FETCH_RECIPES_FAILURE,\n  FETCH_MORE_RECIPES_START,\n  FETCH_MORE_RECIPES_SUCCESS,\n  FETCH_MORE_RECIPES_FAILURE,\n  FETCH_QS_START,\n  FETCH_QS_SUCCESS,\n  FETCH_MORE_QS_SUCCESS,\n  FETCH_QS_FAILURE,\n  SET_SELECTED_RECIPE,\n  SET_NOTIFICATION_DETAILS,\n  AUTH_START,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGOUT_SUCCESS,\n  SET_SCREEN,\n} from './ActionTypes';\nimport Auth0Client from '../auth/Auth';\nimport { callApi } from '../helpers';\n\n/**\n * fetch a list of recipes for the first time\n * thus, offset is automatically set to zero.\n * takes a \"sort method\" argument.\n */\n\nconst fetchRecipesStart = sortMethod => ({\n  type: FETCH_RECIPES_START,\n  payload: sortMethod,\n});\n\nconst fetchRecipesSuccess = recipes => ({\n  type: FETCH_RECIPES_SUCCESS,\n  payload: recipes,\n});\n\nconst fetchRecipesFailure = error => ({\n  type: FETCH_RECIPES_FAILURE,\n  payload: error,\n});\n\nexport const fetchRecipes = sortMethod => (dispatch) => {\n  dispatch(fetchRecipesStart(sortMethod));\n  callApi(`/getrecipes/sort=${sortMethod}`)\n    .then(res => dispatch(fetchRecipesSuccess(res)))\n    .catch(err => dispatch(fetchRecipesFailure(err)));\n};\n\n/**\n * fetch more items from a list that has already been fetched.\n * thus, takes an item \"offset\" as argument.\n * assumes \"sort method\" has already been specified in previous\n * fetch.\n */\n\nconst fetchMoreRecipesStart = () => ({\n  type: FETCH_MORE_RECIPES_START,\n});\n\nconst fetchMoreRecipesSuccess = recipes => ({\n  type: FETCH_MORE_RECIPES_SUCCESS,\n  payload: recipes,\n});\n\nconst fetchMoreRecipesFailure = error => ({\n  type: FETCH_MORE_RECIPES_FAILURE,\n  payload: error,\n});\n\nexport const fetchMoreRecipes = (offset, sortMethod) => (dispatch) => {\n  dispatch(fetchMoreRecipesStart);\n  callApi(`/getrecipes/offset=${offset}-sort=${sortMethod}`)\n    .then(res => dispatch(fetchMoreRecipesSuccess(res)))\n    .catch(err => dispatch(fetchMoreRecipesFailure(err)));\n};\n\n// action to set a selected recipe id\n\nconst setRecipe = id => ({\n  type: SET_SELECTED_RECIPE,\n  payload: id,\n});\n\nexport const setSelectedRecipe = id => (dispatch) => {\n  dispatch(setRecipe(id));\n};\n\nconst setNotificationDetails = (status, message) => ({\n  type: SET_NOTIFICATION_DETAILS,\n  payloadMessage: message,\n  payloadStatus: status,\n});\n\nexport const setNotification = (status, message) => (dispatch) => {\n  dispatch(setNotificationDetails(status, message));\n};\n\nconst loginSuccess = profile => ({\n  type: LOGIN_SUCCESS,\n  payload: profile,\n});\n\nconst loginFailure = err => ({\n  type: LOGIN_FAILURE,\n  payload: err,\n});\n\nconst loginStart = () => ({\n  type: AUTH_START,\n});\n\nexport const login = () => (dispatch) => {\n  dispatch(loginStart());\n  Auth0Client.signIn()\n    .then((res) => {\n      dispatch(loginSuccess(res));\n    })\n    .catch((err) => {\n      loginFailure(err);\n    });\n};\n\nexport const signup = () => (dispatch) => {\n  dispatch(loginStart());\n  Auth0Client.signUp()\n    .then((res) => {\n      dispatch(loginSuccess(res));\n    })\n    .catch((err) => {\n      loginFailure(err);\n    });\n};\n\nconst logoutSuccess = () => ({\n  type: LOGOUT_SUCCESS,\n});\n\nexport const logout = () => (dispatch) => {\n  dispatch(logoutSuccess());\n  Auth0Client.signOut();\n};\n\nexport const checkAuthStatus = cb => (dispatch) => {\n  dispatch(loginStart());\n  Auth0Client.getToken()\n    .then((res) => {\n      dispatch(loginSuccess(res));\n      cb();\n    })\n    .catch((err) => {\n      dispatch(loginFailure(err));\n      login();\n    });\n};\n\nconst fetchQuickSearchStart = sortMethod => ({\n  type: FETCH_QS_START,\n  payload: sortMethod,\n});\n\nconst fetchQuickSearchSuccess = recipes => ({\n  type: FETCH_QS_SUCCESS,\n  payload: recipes,\n});\n\nconst fetchMoreQuickSearchSuccess = recipes => ({\n  type: FETCH_MORE_QS_SUCCESS,\n  payload: recipes,\n});\n\nconst fetchQuickSearchFailure = error => ({\n  type: FETCH_QS_FAILURE,\n  payload: error,\n});\n\nexport const fetchQuickSearch = (query, sortMethod, offset) => (dispatch) => {\n  const offsetParam = offset || '';\n  dispatch(fetchQuickSearchStart(sortMethod));\n  callApi(`/quicksearch/${query}/${sortMethod}/${offsetParam}`)\n    .then((res) => {\n      if (!offset) {\n        dispatch(fetchQuickSearchSuccess(res));\n      } else {\n        dispatch(fetchMoreQuickSearchSuccess(res));\n      }\n    })\n    .catch(err => dispatch(fetchQuickSearchFailure(err)));\n};\n\n/* screen can be either 'desktop' or 'mobile' */\nexport const setScreen = screen => ({\n  type: SET_SCREEN,\n  payload: screen,\n});\n","export const FETCH_RECIPES_START = 'FETCH_RECIPES_START';\nexport const FETCH_RECIPES_SUCCESS = 'FETCH_RECIPES_SUCCESS';\nexport const FETCH_RECIPES_FAILURE = 'FETCH_RECIPES_FAILURE';\n\nexport const FETCH_MORE_RECIPES_START = 'FETCH_MORE_RECIPES_START';\nexport const FETCH_MORE_RECIPES_SUCCESS = 'FETCH_MORE_RECIPES_SUCCESS';\nexport const FETCH_MORE_RECIPES_FAILURE = 'FETCH_MORE_RECIPES_FAILURE';\n\nexport const FETCH_QS_START = 'FETCH_QS_START';\nexport const FETCH_QS_SUCCESS = 'FETCH_QS_SUCCESS';\nexport const FETCH_MORE_QS_SUCCESS = 'FETCH_MORE_QS_SUCCESS';\nexport const FETCH_QS_FAILURE = 'FETCH_QS_FAILURE';\n\nexport const FETCH_IMAGES_START = 'FETCH_IMAGES_START';\nexport const FETCH_IMAGES_SUCCESS = 'FETCH_IMAGES_SUCCESS';\nexport const FETCH_IMAGES_FAILURE = 'FETCH_IMAGES_FAILURE';\n\nexport const FETCH_INGRED_START = 'FETCH_INGRED_START';\nexport const FETCH_INGRED_SUCCESS = 'FETCH_INGRED_SUCCESS';\nexport const FETCH_INGRED_FAILURE = 'FETCH_INGRED_FAILURE';\n\nexport const FETCH_INGRED_GROUP_START = 'FETCH_INGRED_GROUP_START';\nexport const FETCH_INGRED_GROUP_SUCCESS = 'FETCH_INGRED_GROUP_SUCCESS';\nexport const FETCH_INGRED_GROUP_FAILURE = 'FETCH_INGRED_GROUP_FAILURE';\n\nexport const FETCH_SELECTED_RECIPE_START = 'FETCH_SELECTED_RECIPE_START';\nexport const FETCH_SELECTED_RECIPE_SUCCESS = 'FETCH_SELECTED_RECIPE_SUCCESS';\nexport const FETCH_SELECTED_RECIPE_FAILURE = 'FETCH_SELECTED_RECIPE_FAILURE';\n\nexport const SET_SELECTED_RECIPE = 'SET_SELECTED_RECIPE';\n\nexport const SET_NOTIFICATION_DETAILS = 'SET_NOTIFICATION_DETAILS';\n\nexport const AUTH_START = 'AUTH_START';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\n\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\n\nexport const AUTH_NOT_LOGGED_IN = 'AUTH_NOT_LOGGED_IN';\n\nexport const SET_SCREEN = 'SET_SCREEN';\n","export const ING_FIELD_BLANK = {\n  name: '',\n  amount: '',\n  notes: '',\n  groupId: 1,\n  elemId: 0,\n};\n\nexport const ING_GROUP_BLANK = {\n  name: '',\n  notes: '',\n  groupId: 1,\n  elemId: 0,\n};\n\nexport const IMG_BLANK = {\n  imagePath: '',\n  id: 0,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ING_FIELD_BLANK } from '../../common/initial';\n\nconst Ingredient = ({ ingredient }) => {\n  let amount = [ingredient.amount];\n  if (ingredient.amount) {\n    let amountArray = ingredient.amount.split(/~~(\\w+)~~/);\n    if (amountArray.length > 1) {\n      amountArray = amountArray.map((str, i) => {\n        if (i % 2 === 1) {\n          return <span key={i} className=\"strikethrough\">{str}</span>;\n        }\n        return str;\n      });\n      amount = amountArray;\n    }\n  }\n\n  return (\n    <p key={ingredient.id} className=\"recipe-info-ingredients-item\">\n      {ingredient.name}\n      {ingredient.amount && (\n        <span>\n          &nbsp;\n          &mdash;\n          &nbsp;\n          {amount}\n          &nbsp;\n          {ingredient.amount_unit}\n        </span>\n      )}\n      <span className=\"recipe-info-ingredient-note\">\n        {ingredient.notes}\n      </span>\n    </p>\n  );\n};\n\nIngredient.propTypes = {\n  ingredient: PropTypes.object,\n};\n\nIngredient.defaultProps = {\n  ingredient: { ...ING_FIELD_BLANK },\n};\n\nexport default Ingredient;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport Ingredient from './Ingredients';\n\nconst IngredientGroup = ({ ingredients, groups, groupCount, screen }) => {\n  const { t } = useTranslation();\n  /**\n   * From a 1D array of ingredient objects, form a 2D array with each the\n   * ingredients grouped by groupId\n   */\n  const ingredientGroups = [];\n  for (let i = 1; i < groupCount + 1; i++) {\n    ingredientGroups.push(ingredients.filter(item => item.groupId === i));\n  }\n  let dottedBorderClass = '';\n  if (ingredients.length !== 0 && groupCount > 1) {\n    dottedBorderClass = 'recipe-info-ing-list-group';\n  }\n\n  return (\n    <Fragment>\n      <p className=\"recipe-info-label\">{t('common:recipe.ing')}</p>\n      {ingredients.length === 0 && (\n        <p className=\"form-description\">\n          Looks like this recipe doesn&apos;t have any ingredients yet.\n          <br />\n          Use the Edit Recipe button to add some!\n        </p>\n      )}\n      <div className=\"recipe-info-ing-list\">\n        {ingredientGroups.map((group, i) => (\n          <div className=\"recipe-group-wrapper\" key={groups[i].groupId}>\n            {/* if this group has no notes or name, use class that spans full width of screen */}\n            <div className={`${dottedBorderClass} ${(groups[i].notes || groups[i].name) ? 'half-width-ig' : 'full-width-ig'}`}>\n              <div className=\"recipe-info-ing-item-parent\">\n                {group.map((ingredient, j) => (\n                  <Ingredient ingredient={ingredient} key={j} />\n                ))}\n              </div>\n            </div>\n            {(groups[i].notes || groups[i].name) && (\n              <div className=\"recipe-group-info-box\">\n                {groups[i].name && (\n                  <p className=\"recipe-info-group-name\">\n                    {groups[i].name}\n                  </p>\n                )}\n                {groups[i].notes && (\n                  <p className=\"recipe-info-group-note\">\n                    {groups[i].notes}\n                  </p>\n                )}\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nIngredientGroup.propTypes = {\n  ingredients: PropTypes.arrayOf(PropTypes.object),\n  groups: PropTypes.arrayOf(PropTypes.object),\n  groupCount: PropTypes.number,\n  screen: PropTypes.string.isRequired,\n};\n\nIngredientGroup.defaultProps = {\n  ingredients: [],\n  groups: [{}],\n  groupCount: null,\n};\n\nexport default IngredientGroup;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nconst RecipeNotes = ({ notes }) => {\n  const { t } = useTranslation();\n  return (\n    <Fragment>\n      {notes && <p className=\"recipe-info-label\">{t('common:recipe.notes')}</p>}\n      <p className=\"recipe-info-notes\">{notes}</p>\n    </Fragment>\n  )\n};\n\nRecipeNotes.propTypes = {\n  notes: PropTypes.string,\n};\n\nRecipeNotes.defaultProps = {\n  notes: '',\n};\n\nexport default React.memo(RecipeNotes);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst RecipeSize = ({ size }) => (\n  <Fragment>\n    {size && <p className=\"recipe-info-serves\">{size}</p>}\n  </Fragment>\n);\n\nRecipeSize.propTypes = {\n  size: PropTypes.string,\n};\n\nRecipeSize.defaultProps = {\n  size: '',\n};\n\nexport default React.memo(RecipeSize);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Plus } from 'react-feather';\nimport { useTranslation } from 'react-i18next';\n\nconst AddRecipeButton = () => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"ri-top-buttons\">\n      <Link to=\"/addRecipe\">\n        <Plus />\n        &nbsp;\n        {t('common:actions.add')}\n      </Link>\n    </div>\n  );\n};\n\nexport default React.memo(AddRecipeButton);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Edit } from 'react-feather';\nimport { useTranslation } from 'react-i18next';\n\nconst EditRecipeButton = ({ id }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"ri-top-buttons\">\n      <Link to={`/editRecipe/${id}`}>\n        <Edit />\n        &nbsp;\n        {t('common:actions.edit')}\n      </Link>\n    </div>\n  );\n};\n\nEditRecipeButton.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default React.memo(EditRecipeButton);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Trash2 } from 'react-feather';\nimport { useTranslation } from 'react-i18next';\n\nconst DeleteRecipeButton = ({ id }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"ri-top-buttons\">\n      <Link to={`/deleteRecipe/${id}`}>\n        <Trash2 />\n        &nbsp;\n        {t('common:actions.delete')}\n      </Link>\n    </div>\n  );\n};\n\nDeleteRecipeButton.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default React.memo(DeleteRecipeButton);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nconst RecipeImages = ({ images, name }) => {\n  const { t } = useTranslation();\n  return (\n    <Fragment>\n      {images.length !== 0 && (\n        <p className=\"recipe-info-label\">\n          {t('common:recipe.images')}\n        </p>\n      )}\n      {images.map((image) => {\n        if (image) {\n          return (\n            <div className=\"form-image-wrapper\" key={image.elemId}>\n              <img\n                className=\"ri-image\"\n                src={`/api/static/${image.imagePath}`}\n                alt={name}\n              />\n            </div>\n          );\n        }\n        return null;\n      })}\n    </Fragment>\n  );\n};\n\n\nRecipeImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    imagePath: PropTypes.string,\n    elemId: PropTypes.number,\n  })),\n  name: PropTypes.string,\n};\n\nRecipeImages.defaultProps = {\n  images: [],\n  name: '',\n};\n\nexport default RecipeImages;\n","import React, { Fragment, Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport IngredientGroup from './components/IngredientGroup';\nimport RecipeNotes from './components/RecipeNotes';\nimport RecipeSize from './components/RecipeSize';\nimport AddRecipeButton from './components/AddRecipeButton';\nimport EditRecipeButton from './components/EditRecipeButton';\nimport DeleteRecipeButton from './components/DeleteRecipeButton';\nimport RecipeImages from './components/RecipeImages';\nimport { hs, callApi } from '../helpers';\nimport { ING_GROUP_BLANK } from '../common/initial';\nimport './styles.css';\n\nclass RecipeInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredients: [],\n      groups: [],\n      groupCount: 1,\n      images: [],\n      info: [],\n      loadingInfo: true,\n      fetchError: false,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match,\n      setSelectedRecipe,\n      selectedId,\n      history,\n      loadingAuth,\n    } = this.props;\n\n    const paramId = +hs.decode(match.params.id);\n    if (selectedId !== paramId) {\n      setSelectedRecipe(paramId);\n    }\n\n    /* Run fetchInfo() when a user first navigates to this page\n     * from elsewhere on the website\n     */\n    if (!loadingAuth) {\n      if (selectedId !== -1) {\n        this.fetchRecipeInfo();\n      }\n    }\n\n    /* Redirect page if no recipe is selected or\n     * if no recipe id is passed  as a route parameter\n     */\n    if (!(match.params.id) && selectedId === -1) {\n      history.push('/');\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      loadingAuth,\n      selectedId,\n    } = this.props;\n\n    /* Run fetchInfo() once when a user first navigates to this page\n     * (not from a different page on the website) and the call needs\n     * to wait until the user is authenticated.\n     */\n    if (prevProps.loadingAuth !== loadingAuth || prevProps.selectedId !== selectedId) {\n      if (!loadingAuth) {\n        if (selectedId !== -1) {\n          this.fetchRecipeInfo();\n        }\n      }\n    }\n\n    /* If above fetch calls causes a problem, throw error.\n     * RecipeInfoErrorBoundary component will catch it.\n     */\n    if (prevProps.error || prevState.fetchError) {\n      throw Error();\n    }\n  }\n\n  fetchRecipeInfo() {\n    const { selectedId } = this.props;\n    callApi(`/getrecipeinfo/${selectedId}`)\n      .then((res) => {\n        let { groups } = res;\n        if (groups.length === 0) {\n          groups = [{ ...ING_GROUP_BLANK }];\n        }\n        this.setState({\n          groups,\n          ingredients: res.ingredients,\n          images: res.images,\n          groupCount: groups.length,\n          info: res.info,\n          loadingInfo: false,\n          fetchError: false,\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({ fetchError: true });\n      });\n  }\n\n  render() {\n    const { selectedId, error, screen } = this.props;\n    const {\n      loadingInfo,\n      groups,\n      groupCount,\n      ingredients,\n      images,\n      info,\n      fetchError,\n    } = this.state;\n\n    if (error || fetchError) {\n      return null;\n    }\n\n    const hashid = hs.encode(selectedId);\n\n    return (\n      <Fragment>\n        <div className=\"ri-action-buttons\">\n          {(screen !== 'mobile') && <AddRecipeButton />}\n          <EditRecipeButton id={hashid} />\n          <DeleteRecipeButton id={hashid} />\n        </div>\n        <p className=\"recipe-info-name\">{info.name}</p>\n        <RecipeSize size={info.size} />\n        {!loadingInfo && (\n          <Fragment>\n            <IngredientGroup\n              ingredients={ingredients}\n              groups={groups}\n              groupCount={groupCount}\n              screen={screen}\n            />\n            <RecipeNotes notes={info.notes} />\n            <RecipeImages images={images} name={info.name} screen={screen} />\n          </Fragment>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nRecipeInfo.propTypes = {\n  error: PropTypes.bool,\n  selectedId: PropTypes.number.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n  setSelectedRecipe: PropTypes.func.isRequired,\n  loadingAuth: PropTypes.bool.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  screen: PropTypes.string.isRequired,\n};\n\nRecipeInfo.defaultProps = {\n  error: false,\n};\n\nexport default withRouter(RecipeInfo);\n","import { connect } from 'react-redux';\nimport RecipeInfo from './view';\nimport {\n  setSelectedRecipe,\n} from '../Actions/index';\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = {\n  setSelectedRecipe,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeInfo);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nconst LoadMoreButton = ({ onAction, loading, loadingAuth }) => {\n  const { t } = useTranslation();\n  let str = t('common:list.load');\n  let cursorClass = '';\n  let func = onAction;\n  if (loadingAuth || loading) {\n    str = t('common:list.loading');\n    cursorClass = 'default-cursor';\n    func = null;\n  }\n  return (\n    <button\n      type=\"button\"\n      role=\"link\"\n      tabIndex=\"0\"\n      onClick={func}\n      onKeyDown={func}\n      className={`housekeeping-message load-more-button ${cursorClass}`}\n    >\n      {str}\n    </button>\n  );\n};\n\nLoadMoreButton.propTypes = {\n  onAction: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  loadingAuth: PropTypes.bool.isRequired,\n};\n\nexport default React.memo(LoadMoreButton);\n","import React, { Component } from 'react';\nimport './styles.css';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport LoadMoreButton from './components/LoadMoreButton';\nimport { hs } from '../helpers';\n\nclass RecipeList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortMethod: 'update_date',\n      searchMode: false,\n      sQuery: '',\n    };\n    this.onSortSelect = this.onSortSelect.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onLoadMore = this.onLoadMore.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { error } = this.props;\n    if (error) {\n      throw Error();\n    }\n  }\n\n  onRecipeClick(id) {\n    const { selectedId, setSelectedRecipe } = this.props;\n    if (id !== selectedId) {\n      setSelectedRecipe(id);\n    }\n  }\n\n  onSortSelect(event) {\n    const { fetchRecipes, fetchQuickSearch } = this.props;\n    this.setState({ sortMethod: event.target.value }, () => {\n      const { sortMethod, searchMode, sQuery } = this.state;\n      if (!searchMode) {\n        fetchRecipes(sortMethod);\n      } else {\n        fetchQuickSearch(sQuery, sortMethod);\n      }\n    });\n  }\n\n  onSearchChange(e) {\n    const { sortMethod, fetchRecipes, fetchQuickSearch } = this.props;\n    const query = e.target.value;\n    this.setState({\n      sQuery: query,\n    });\n    if (query !== '') {\n      this.setState({\n        searchMode: true,\n      });\n      fetchQuickSearch(query, sortMethod);\n    } else {\n      this.setState({\n        searchMode: false,\n      });\n      fetchRecipes(sortMethod);\n    }\n  }\n\n  onLoadMore() {\n    const { searchMode, sortMethod, sQuery } = this.state;\n    const { fetchMoreRecipes, fetchQuickSearch, listOffset, recipes } = this.props;\n    if (!searchMode) {\n      fetchMoreRecipes(listOffset, sortMethod);\n    } else {\n      fetchQuickSearch(sQuery, sortMethod, recipes.length);\n    }\n  }\n\n  render() {\n    const {\n      recipes,\n      selectedId,\n      loading,\n      error,\n      loadingAuth,\n      t,\n      noMoreResults,\n    } = this.props;\n    const { sortMethod, sQuery } = this.state;\n\n    return (\n      <div>\n        <form>\n          <input\n            type=\"text\"\n            placeholder=\"quick search\"\n            className=\"quick-search-field\"\n            value={sQuery}\n            onChange={this.onSearchChange}\n          />\n        </form>\n        <form>\n          <select value={sortMethod} onChange={this.onSortSelect}>\n            <option value=\"name\">{t('common:list.name')}</option>\n            <option value=\"update_date\">{t('common:list.update')}</option>\n            <option value=\"create_date\">{t('common:list.create')}</option>\n          </select>\n        </form>\n        {(!loading || !error) && recipes.map((recipe) => {\n          const hashid = hs.encode(recipe.id);\n          return (\n            <div key={recipe.id}>\n              <Link\n                role=\"link\"\n                to={`/recipe/${hashid}`}\n                tabIndex=\"0\"\n                onClick={() => this.onRecipeClick(recipe.id)}\n                onKeyDown={() => this.onRecipeClick(recipe.id)}\n                className=\"recipe-list-item-wrapper\"\n              >\n                <p className={(recipe.id === selectedId ? 'selected' : '')}>\n                  {recipe.name}\n                </p>\n              </Link>\n            </div>\n          );\n        })}\n        {!noMoreResults && (\n          <LoadMoreButton\n            onAction={this.onLoadMore}\n            loading={loading}\n            loadingAuth={loadingAuth}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nRecipeList.propTypes = {\n  recipes: PropTypes.arrayOf(PropTypes.object),\n  error: PropTypes.bool,\n  loading: PropTypes.bool,\n  loadingAuth: PropTypes.bool.isRequired,\n  selectedId: PropTypes.number,\n  listOffset: PropTypes.number,\n  fetchRecipes: PropTypes.func.isRequired,\n  fetchQuickSearch: PropTypes.func.isRequired,\n  sortMethod: PropTypes.string.isRequired,\n  fetchMoreRecipes: PropTypes.func.isRequired,\n  setSelectedRecipe: PropTypes.func.isRequired,\n  noMoreResults: PropTypes.bool.isRequired,\n  t: PropTypes.func.isRequired,\n};\n\nRecipeList.defaultProps = {\n  recipes: [],\n  error: false,\n  loading: false,\n  selectedId: 1,\n  listOffset: 0,\n};\n\nexport default withTranslation()(RecipeList);\n","import { connect } from 'react-redux';\nimport {\n  fetchRecipes,\n  setSelectedRecipe,\n  fetchMoreRecipes,\n  fetchQuickSearch,\n} from '../Actions/index';\n\nimport RecipeList from './view';\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = {\n  fetchRecipes,\n  setSelectedRecipe,\n  fetchMoreRecipes,\n  fetchQuickSearch,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(RecipeList);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withTranslation } from 'react-i18next';\nimport { AlertCircle } from 'react-feather';\n\nclass Field extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, onChange } = this.props;\n    if (onChange) {\n      onChange(name, e.target.value);\n    }\n  }\n\n  render() {\n    const {\n      name,\n      className,\n      labelClassName,\n      value,\n      id,\n      textarea,\n      invalid,\n      validString,\n      onBlur,\n      outerClassName,\n      required,\n      info,\n      labelname,\n      t,\n    } = this.props;\n\n    const TagType = textarea ? 'textarea' : 'input';\n    const validClass = invalid ? ' invalid' : '';\n\n    return (\n      <div className={outerClassName}>\n        <label htmlFor={id} className={`${labelClassName} field-label`}>\n          {labelname || name}\n          {required && (\n            <span className=\"required-label\">\n              {t('common:recipeform.required')}\n            </span>\n          )}\n        </label>\n        {info && <p className=\"form-description\">{info}</p>}\n        <TagType\n          placeholder={labelname || name}\n          className={`${className}${validClass} rf-input`}\n          id={id}\n          type=\"text\"\n          value={value || ''}\n          onChange={this.handleChange}\n          onBlur={onBlur}\n        />\n        {invalid && (\n          <p className=\"error-msg\">\n            <AlertCircle />\n            {` ${validString}`}\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  labelClassName: PropTypes.string,\n  value: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  textarea: PropTypes.bool,\n  invalid: PropTypes.bool,\n  validString: PropTypes.string,\n  outerClassName: PropTypes.string,\n  info: PropTypes.string,\n  labelname: PropTypes.string,\n  required: PropTypes.bool,\n  screen: PropTypes.string.isRequired,\n};\n\nField.defaultProps = {\n  onBlur: () => {},\n  className: '',\n  labelClassName: '',\n  value: '',\n  id: '',\n  name: '',\n  textarea: false,\n  invalid: false,\n  validString: '',\n  labelname: '',\n  outerClassName: 'form-group',\n  info: '',\n  required: false,\n};\n\nconst mapStateToProps = state => state;\n\nexport default connect(mapStateToProps)(withTranslation()(Field));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { X } from 'react-feather';\nimport { withTranslation } from 'react-i18next';\nimport { ING_FIELD_BLANK } from '../../common/initial';\n\nclass IngField extends Component {\n  constructor(props) {\n    super(props);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleAmtChange = this.handleAmtChange.bind(this);\n    this.handleNotesChange = this.handleNotesChange.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.removeFields = this.removeFields.bind(this);\n  }\n\n  handleNameChange(e) {\n    e.preventDefault();\n    const { onChange, ingId } = this.props;\n    if (onChange) {\n      onChange('name', ingId, e.target.value);\n    }\n  }\n\n\n  handleAmtChange(e) {\n    e.preventDefault();\n    const { onChange, ingId } = this.props;\n    if (onChange) {\n      onChange('amount', ingId, e.target.value);\n    }\n  }\n\n  handleNotesChange(e) {\n    e.preventDefault();\n    const { onChange, ingId } = this.props;\n    if (onChange) {\n      onChange('notes', ingId, e.target.value);\n    }\n  }\n\n\n  handleFocus(e) {\n    e.preventDefault();\n    const { onFocus, ingId } = this.props;\n    if (onFocus) {\n      onFocus(ingId);\n    }\n  }\n\n  handleBlur(e) {\n    e.preventDefault();\n    const { onBlur, ingId } = this.props;\n    if (onBlur) {\n      onBlur(ingId);\n    }\n  }\n\n  removeFields(e) {\n    e.preventDefault();\n    const { onRemoveSelected, ingId } = this.props;\n    if (onRemoveSelected) {\n      onRemoveSelected(ingId);\n    }\n  }\n\n  render() {\n    const {\n      value,\n      ingId,\n      groupId,\n      t,\n      screen,\n    } = this.props;\n\n    return (\n      <div className=\"new-ing-fields form-group\">\n        <input\n          placeholder={t('common:recipeform.ingName')}\n          className=\"new-ing-field-left field-label ing-field\"\n          id=\"nr-ing-name-input\"\n          type=\"text\"\n          value={value.name || ''}\n          onFocus={this.handleFocus}\n          onChange={this.handleNameChange}\n        />\n        <input\n          placeholder={t('common:recipeform.ingAmt')}\n          className=\"new-ing-field-ctr field-label ing-field\"\n          id=\"nr-ing-amount-input\"\n          type=\"text\"\n          value={value.amount || ''}\n          onChange={this.handleAmtChange}\n        />\n        <input\n          placeholder={t('common:recipeform.ingNotes')}\n          className=\"new-ing-field-right field-label ing-field\"\n          id=\"nr-ing-notes-input\"\n          type=\"text\"\n          value={value.notes || ''}\n          onChange={this.handleNotesChange}\n          onBlur={this.handleBlur}\n        />\n        {/* don't show 'remove ingredient' button for the\n          * first ingredient of the first group */}\n        {!(ingId === 0 && groupId === 1)\n        && (\n          <button\n            type=\"button\"\n            onClick={this.removeFields}\n            onKeyDown={this.removeFields}\n            tabIndex=\"-1\"\n          >\n            {(screen !== 'mobile') && <X />}\n            {(screen === 'mobile') && <p className=\"rem-ing-link\">remove this ingredient</p>}\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nIngField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func.isRequired,\n  onFocus: PropTypes.func.isRequired,\n  onRemoveSelected: PropTypes.func.isRequired,\n  screen: PropTypes.string.isRequired,\n  value: PropTypes.object,\n  ingId: PropTypes.number,\n  groupId: PropTypes.number,\n  t: PropTypes.func.isRequired,\n};\n\nIngField.defaultProps = {\n  value: { ...ING_FIELD_BLANK },\n  ingId: 0,\n  groupId: 1,\n};\n\nexport default withTranslation()(IngField);\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IngField from './IngField';\nimport Field from './Field';\nimport { ING_FIELD_BLANK, ING_GROUP_BLANK } from '../../common/initial';\n\nclass IngGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.onIngFieldChange = this.onIngFieldChange.bind(this);\n    this.addIngField = this.addIngField.bind(this);\n    this.onFieldChange = this.onFieldChange.bind(this);\n    const { ingredients, group } = props;\n    this.state = {\n      ingredients,\n      groupInfo: { ...group },\n    };\n  }\n\n  onIngFieldChange = (param, id, val) => {\n    const { ingredients, groupInfo } = this.state;\n    const { onIngGroupUpdate, groupId } = this.props;\n    ingredients[id][param] = val;\n    this.setState({ ingredients });\n    const ing = JSON.parse(JSON.stringify(ingredients));\n    if (onIngGroupUpdate) {\n      onIngGroupUpdate(ing, groupId, groupInfo);\n    }\n  };\n\n  onFieldChange = (param, val) => {\n    this.setState(prevState => ({\n      groupInfo: { ...prevState.groupInfo, [param]: val },\n    }), () => {\n      const { onIngGroupUpdate, groupId } = this.props;\n      const { ingredients, groupInfo } = this.state;\n      if (onIngGroupUpdate) {\n        onIngGroupUpdate(ingredients, groupId, groupInfo);\n      }\n    });\n  };\n\n/**\n * functions to add and remove ingredient fields automatically.\n * when a user focuses on the last field of the list, a new set appears\n * when a user blurs off the last field of the list, and there are two\n * rows of empty fields, the last row is removed.\n */\n\n  addIngField = (id) => {\n    const { ingredients } = this.state;\n    const { groupId } = this.props;\n    if (id === ingredients.length - 1) {\n      this.setState(prevState => ({\n        ingredients: [\n          ...prevState.ingredients,\n          { name: '', amount: '', notes: '', groupId },\n        ],\n      }));\n    }\n  };\n\n  removeEmptyIngField = (id) => {\n    const { ingredients } = this.state;\n    if (\n      ingredients.length > 1\n      && ingredients[id].name === ''\n      && ingredients[id].amount === ''\n      && ingredients[id].notes === ''\n    ) {\n      this.setState((prevState) => {\n        // prevState is only shallow copied by default,\n        // so must be done manually to avoid getting empty `ingredients`\n        const newIng = [...prevState.ingredients];\n        newIng.pop();\n        return {\n          ingredients: newIng,\n        };\n      });\n    }\n  };\n\n  removeSelectedIngField = (id) => {\n    const { onRemoveGroup, onIngGroupUpdate, groupId } = this.props;\n    this.setState((prevState) => {\n      const newIng = [...prevState.ingredients];\n      newIng.splice(id, 1);\n      return {\n        ingredients: newIng,\n      };\n    }, () => {\n      const { ingredients, groupInfo } = this.state;\n      if (ingredients.length === 0) {\n        onRemoveGroup(groupId);\n      } else {\n        onIngGroupUpdate(ingredients, groupId, groupInfo);\n      }\n    });\n  };\n\n  render() {\n    const {\n      ingredients,\n      groupInfo,\n    } = this.state;\n    const { groupId, t, screen } = this.props;\n\n    if (ingredients.length === 0) {\n      return null;\n    }\n\n    const ingFields = [];\n    for (let i = 0; i < ingredients.length; i++) {\n      ingFields.push(\n        (<Fragment key={i}>\n          {(screen === 'mobile') && (\n            <p className=\"ing-num-label\">\n              {t('common:recipe.ing-single')}\n              &nbsp;\n              {i + 1}\n            </p>\n          )}\n          <IngField\n            onChange={this.onIngFieldChange}\n            value={ingredients[i]}\n            ingId={i}\n            groupId={groupId}\n            onFocus={this.addIngField}\n            onBlur={this.removeEmptyIngField}\n            onRemoveSelected={this.removeSelectedIngField}\n            screen={screen}\n          />\n        </Fragment>),\n      );\n    }\n\n    return (\n      <div className=\"ingredient-group\">\n        {ingFields}\n        <div className=\"form-group-buttons\">\n          <p className=\"form-description\">\n            {t('common:recipeform.ingGroupDesc')}\n          </p>\n          <div className=\"ing-group-fields\">\n            <Field\n              labelname={t('common:recipeform.grpName')}\n              name=\"name\"\n              className=\"ing-group-info igi-name\"\n              outerClassName=\"no-pad\"\n              onChange={this.onFieldChange}\n              value={groupInfo.name}\n            />\n            <Field\n              labelname={t('common:recipeform.grpNotes')}\n              name=\"notes\"\n              className=\"ing-group-info igi-notes\"\n              outerClassName=\"no-pad\"\n              onChange={this.onFieldChange}\n              value={groupInfo.notes}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nIngGroup.propTypes = {\n  groupId: PropTypes.number,\n  onIngGroupUpdate: PropTypes.func.isRequired,\n  ingredients: PropTypes.arrayOf(PropTypes.object),\n  group: PropTypes.object,\n  onRemoveGroup: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired,\n  screen: PropTypes.string.isRequired,\n};\n\nIngGroup.defaultProps = {\n  groupId: 1,\n  ingredients: [ING_FIELD_BLANK],\n  group: { ...ING_GROUP_BLANK },\n};\n\nexport default withTranslation()(IngGroup);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst IngFieldsHeader = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"new-ing-fields form-group ing-field-labels\">\n      <label\n        className=\"new-ing-field-left field-label\"\n        htmlFor=\"nr-ing-name-input\"\n      >\n        {t('common:recipeform.ingName')}\n      </label>\n      <label\n        className=\"new-ing-field-ctr field-label\"\n        htmlFor=\"nr-ing-amount-input\"\n      >\n        {t('common:recipeform.ingAmt')}\n      </label>\n      <label\n        className=\"new-ing-field-right field-label\"\n        htmlFor=\"nr-ing-notes-input\"\n      >\n        {t('common:recipeform.ingNotes')}\n      </label>\n    </div>\n  );\n};\n\nexport default IngFieldsHeader;\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Check, AlertCircle, Edit3 } from 'react-feather';\n\nclass StatusInfo extends Component {\n  render() {\n    const { status, message, hiddenClass } = this.props;\n\n    let statusClass = '';\n    if (status === 'success') {\n      statusClass = 'notification-green';\n    } else if (status === 'fail') {\n      statusClass = 'notification-yellow';\n    } else if (status === 'warn') {\n      statusClass = 'notification-yellow';\n    }\n\n    return (\n      <Fragment>\n        {(status !== '') && (\n          <div className={`notification ${statusClass} ${hiddenClass}`}>\n            {status === 'success' && <Check />}\n            {(status === 'fail' || status === 'warn') && <AlertCircle />}\n            {status === 'load' && <Edit3 />}\n            {` ${message}`}\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nStatusInfo.propTypes = {\n  status: PropTypes.string,\n  message: PropTypes.string,\n  hiddenClass: PropTypes.string.isRequired,\n};\n\nStatusInfo.defaultProps = {\n  status: '',\n  message: '',\n};\n\nexport default StatusInfo;\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport StatusInfoLogic from './StatusInfoLogic';\n\nclass StatusInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHidden: false,\n    };\n  }\n\n  componentDidMount() {\n    const { decay } = this.props;\n    if (decay) {\n      this.timeout = setTimeout(() => {\n        this.setState({ isHidden: true });\n      }, 10000);\n    }\n  }\n\n  componentWillUnmount() {\n    const { decay } = this.props;\n    if (decay) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  render() {\n    const { status, message } = this.props;\n    const { isHidden } = this.state;\n\n    const hiddenClass = isHidden ? 'hidden' : 'not-hidden';\n\n    return (\n      <Fragment>\n        {!isHidden && (\n          <StatusInfoLogic status={status} message={message} hiddenClass={hiddenClass} />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nStatusInfo.propTypes = {\n  status: PropTypes.string,\n  message: PropTypes.string,\n  decay: PropTypes.bool,\n};\n\nStatusInfo.defaultProps = {\n  status: '',\n  message: '',\n  decay: true,\n};\n\nexport default StatusInfo;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport StatusInfo from '../../common/StatusInfo';\nimport { callApi } from '../../helpers';\n\nconst MAX_FILE_SIZE = 1024 * 1024 * 2; // 2MB\nconst MAX_FILE_COUNT = 5;\n// 255: maximum filename size in DB\n// 18: total characters of 4 letter filename & datecode\nconst MAX_FILE_NAME_LENGTH = 255 - 18;\n\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: '',\n      statusMessage: '',\n      warn: '',\n      warnMessage: '',\n    };\n    this.onImageChosen = this.onImageChosen.bind(this);\n  }\n\n  onImageChosen = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const { onDone, imageCount, t } = this.props;\n    const data = new FormData();\n    let fail = false;\n\n    // FileList is not an array but array-list, so\n    // create array from it then iterate\n    Array.from(e.target.files).forEach((file, i) => {\n      if (file.name.length > MAX_FILE_NAME_LENGTH) {\n        fail = true;\n        this.setState({\n          status: 'fail',\n          statusMessage: t('common:imgupload.filename', { length: MAX_FILE_NAME_LENGTH }),\n        });\n      }\n      if (i >= MAX_FILE_COUNT - imageCount) {\n        this.setState({\n          warn: 'warn',\n          warnMessage: t('common:imgupload.filecount', { count: MAX_FILE_COUNT }),\n        });\n      } else if (file.size > MAX_FILE_SIZE) {\n        fail = true;\n        this.setState({\n          status: 'fail',\n          statusMessage: t('common:imgupload.filesize', { size: 2 }),\n        });\n      } else {\n        data.append('file', e.target.files[i]);\n      }\n    });\n    if (!fail) {\n      this.setState({\n        status: 'load',\n        statusMessage: t('common:imgupload.loading'),\n      }, () => {\n        callApi('/addimage', {\n          method: 'POST',\n          body: data,\n        })\n          .then((res) => {\n            this.setState({\n              status: 'success',\n              statusMessage: t('common:imgupload.success'),\n            });\n            console.log(res);\n            if (onDone) {\n              onDone(res);\n            }\n            console.log(res);\n          })\n          .catch((err) => {\n            this.setState({\n              status: 'fail',\n              statusMessage: t('common:imgupload.fail'),\n            });\n            console.error(err);\n          });\n      });\n    }\n  }\n\n  render() {\n    const { status, statusMessage, warn, warnMessage } = this.state;\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <p className=\"form-description\">\n          {t('common:recipeform.imgDesc')}\n        </p>\n        <label htmlFor=\"recipe-image-upload\" className=\"hidden\">\n          Image Upload\n        </label>\n        <input\n          id=\"recipe-image-upload\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={this.onImageChosen}\n          value=\"\"\n          multiple\n        />\n        <StatusInfo\n          status={warn}\n          message={warnMessage}\n        />\n        <StatusInfo\n          status={status}\n          message={statusMessage}\n        />\n      </div>\n    );\n  }\n}\n\nImageUpload.propTypes = {\n  imageCount: PropTypes.number.isRequired,\n  onDone: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired,\n};\n\nexport default withTranslation()(ImageUpload);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ImageUpload from './ImageUpload';\nimport { callApi } from '../../helpers';\n\nclass RecipeImages extends Component {\n  constructor(props) {\n    super(props);\n    const { images } = this.props;\n    this.state = {\n      images,\n    };\n    this.onImageDelete = this.onImageDelete.bind(this);\n  }\n\n  onImageUpload = (imagePathArray) => {\n    const { onImageStateUpdate } = this.props;\n    const { images } = this.state;\n    const newImages = [];\n    let lastId = 1;\n    if (images.length !== 0) {\n      lastId = images[images.length - 1].elemId + 1;\n    }\n    imagePathArray.forEach((path) => {\n      newImages.push({\n        imagePath: path,\n        elemId: lastId,\n      });\n      lastId++;\n    });\n\n    this.setState(prevState => ({\n      images: [\n        ...prevState.images,\n        ...newImages,\n      ],\n    }), () => {\n      const { images: newImageState } = this.state;\n      onImageStateUpdate(newImageState);\n    });\n  }\n\n  onImageDelete = (id, path) => {\n    const { images } = this.state;\n    const { onImageStateUpdate } = this.props;\n    const newImageState = images.filter(image => (\n      image.elemId !== id\n    ));\n    this.setState({ images: newImageState }, () => {\n      onImageStateUpdate(newImageState);\n    });\n    // API call to actually delete the images from the server\n    callApi(`/deleteImageWithPath/${path}`, {\n      method: 'DELETE',\n    })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  render() {\n    const { images } = this.state;\n    const { name, t } = this.props;\n    const imageCount = images.length;\n\n    return (\n      <Fragment>\n        <ImageUpload onDone={this.onImageUpload} imageCount={imageCount} />\n        {images.map((image, i) => {\n          if (image) {\n            return (\n              <div className=\"form-image-wrapper\" key={image.elemId}>\n                <img\n                  className=\"recipe-form-image\"\n                  src={`/api/static/${image.imagePath}`}\n                  alt={`${name}-${i}`}\n                />\n                <input\n                  className=\"close-image-button\"\n                  type=\"button\"\n                  data={image.elemId}\n                  onClick={() => { this.onImageDelete(image.elemId, image.imagePath); }}\n                  value={t('common:imgupload.remove')}\n                />\n              </div>\n            );\n          }\n          return null;\n        })}\n      </Fragment>\n    );\n  }\n}\n\nRecipeImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    imagePath: PropTypes.string,\n    elemId: PropTypes.number,\n  })),\n  name: PropTypes.string,\n  onImageStateUpdate: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired,\n};\n\nRecipeImages.defaultProps = {\n  images: [],\n  name: '',\n};\n\nexport default withTranslation()(RecipeImages);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst FormSubHeader = ({ subtitle }) => (\n  <Fragment>\n    <hr />\n    <h2 className=\"subtitle\">{subtitle}</h2>\n  </Fragment>\n);\n\nFormSubHeader.propTypes = {\n  subtitle: PropTypes.string,\n};\n\nFormSubHeader.defaultProps = {\n  subtitle: '',\n};\n\nexport default React.memo(FormSubHeader);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Plus, AlertCircle } from 'react-feather';\nimport { withRouter } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport Field from './components/Field';\nimport IngGroup from './components/IngGroup';\nimport IngFieldsHeader from './components/IngFieldsHeader';\nimport RecipeImages from './components/RecipeImages';\nimport FormSubHeader from './components/FormSubHeader';\nimport { ING_FIELD_BLANK, ING_GROUP_BLANK } from '../common/initial';\nimport { hs, callApi } from '../helpers';\nimport './styles.css';\n\nclass RecipeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onFieldChange = this.onFieldChange.bind(this);\n\n    const initialState = {\n      notes: props.notes,\n      name: props.name,\n      size: props.size,\n      groups: props.initialGroups,\n      ingredients: props.initialIngredients,\n      images: props.initialImages,\n      submitError: false,\n      submitStatus: '',\n      invalid: { name: false, ingCount: false },\n    };\n\n    this.state = {\n      ...initialState,\n      stateOnSubmit: initialState,\n    };\n  }\n\n  onFieldChange = (param, val) => {\n    this.setState({ [param]: val });\n    this.validate();\n  };\n\n  onAddGroup = () => {\n    this.setState(prevState => ({\n      groups: [\n        ...prevState.groups,\n        {\n          ...ING_GROUP_BLANK,\n          groupId: prevState.groups.length + 1,\n          elemId: prevState.groups[prevState.groups.length - 1].elemId + 1,\n        },\n      ],\n      ingredients: [\n        ...prevState.ingredients,\n        [{\n          ...ING_FIELD_BLANK,\n          groupId: prevState.groups.length + 1,\n        }],\n      ],\n    }));\n  };\n\n  onRemoveGroup = (groupId) => {\n    const groupIndex = groupId - 1;\n    const { ingredients, groups } = this.state;\n\n    const ingRemoved = [\n      ...ingredients.slice(0, groupIndex),\n      ...ingredients.slice(groupIndex + 1),\n    ];\n    const groupRemoved = [\n      ...groups.slice(0, groupIndex),\n      ...groups.slice(groupIndex + 1),\n    ];\n\n    /**\n     * If a user deletes a group by removing all of the ingredients in it,\n     * then the groupIds will skip around. This reindexes group numbers,\n     * starting with 1.\n     */\n    const ingReindex = ingRemoved.map((ingGroup, i) => {\n      const group = [];\n      for (let j = 0; j < ingGroup.length; j++) {\n        group.push({ ...ingGroup[j], groupId: i + 1 });\n      }\n      return group;\n    });\n\n    const groupReindex = groupRemoved.map((group, i) => (\n      { ...group, groupId: i + 1 }\n    ));\n\n    this.setState({\n      ingredients: ingReindex,\n      groups: groupReindex,\n    });\n  };\n\n  onIngGroupUpdate = (ingredients, groupId, groupInfo) => {\n    const newIng = ingredients.filter(ing => (\n      !(ing.name === '' && ing.amount === '' && ing.notes === '')\n    ));\n    this.setState(prevState => ({\n      ingredients: Object.assign(\n        [], prevState.ingredients,\n        { [groupId - 1]: newIng },\n      ),\n      groups: Object.assign(\n        [], prevState.groups,\n        { [groupId - 1]: { groupId, ...groupInfo } },\n      ),\n    }));\n  };\n\n  updateImageState = (images) => {\n    this.setState({ images });\n  }\n\n  validate = () => {\n    const { name } = this.state;\n    if (name === '') {\n      this.setState(prevProps => ({\n        invalid: { ...prevProps.invalid, name: true },\n      }));\n      return true;\n    }\n    this.setState(prevProps => ({\n      invalid: { ...prevProps.invalid, name: false },\n    }));\n    return false;\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const {\n      ingredients,\n      groups,\n      name,\n      notes,\n      size,\n      images,\n      stateOnSubmit,\n    } = this.state;\n\n    const {\n      fetchUrl,\n      setNotification,\n      messages,\n      fetchRecipes,\n      sortMethod,\n      selectedId,\n      setSelectedRecipe,\n      history,\n    } = this.props;\n\n    /**\n     * directly using the 'invalid' state parameter after calling\n     * validate() can be buggy because the function is asynchronous.\n     * Thus we directly take the return value of the function instead\n    */\n    if (this.validate()) {\n      this.setState({ submitError: true });\n      return;\n    }\n\n    const ingCollect = [].concat(...ingredients).filter((ing) => {\n      return !(ing.name === '' && ing.amount === '' && ing.notes === '');\n    });\n    const groupCollect = (ingCollect.length === 0) ? [] : groups;\n\n    callApi(fetchUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name,\n        notes,\n        size,\n        ingredients: ingCollect,\n        groups: groupCollect,\n        images,\n      }),\n    })\n      .then((res) => {\n        this.setState({ ...stateOnSubmit });\n        window.scrollTo(0, 0);\n        fetchRecipes(sortMethod);\n        if (selectedId === -1) {\n          setSelectedRecipe(+res);\n          const hashid = hs.encode(+res);\n          history.push(`/recipe/${hashid}`);\n        } else {\n          const hashid = hs.encode(selectedId);\n          history.push(`/recipe/${hashid}`);\n        }\n      })\n      .catch((err) => {\n        setNotification('fail', messages.failMessage);\n        window.scrollTo(0, 0);\n        console.error(err);\n      });\n  };\n\n  render() {\n    const {\n      name,\n      size,\n      notes,\n      groups,\n      ingredients,\n      images,\n      invalid,\n      submitError,\n    } = this.state;\n\n    const {\n      title,\n      messages,\n      t,\n      screen,\n    } = this.props;\n\n    const groupFields = [];\n    for (let i = 0; i < groups.length; i++) {\n      groupFields.push(\n        <div key={groups[i].elemId}>\n          <IngGroup\n            groupId={i + 1}\n            onIngGroupUpdate={this.onIngGroupUpdate}\n            onRemoveGroup={this.onRemoveGroup}\n            ingredients={ingredients[i]}\n            group={groups[i]}\n            screen={screen}\n          />\n        </div>,\n      );\n    }\n\n    return (\n      <Fragment>\n        <h1 className=\"title\">{title}</h1>\n        <FormSubHeader subtitle={t('common:recipeform.info')} />\n        <form id=\"nr-form\" onSubmit={this.onSubmit} autoComplete=\"off\">\n          <Field\n            onChange={this.onFieldChange}\n            value={name}\n            labelname={t('common:recipeform.name')}\n            name=\"name\"\n            id=\"nr-name-input\"\n            invalid={invalid.name}\n            validString=\"a name is required!\"\n            onBlur={this.validate}\n            required\n          />\n          <Field\n            onChange={this.onFieldChange}\n            labelname={t('common:recipeform.size')}\n            value={size}\n            name=\"size\"\n            id=\"nr-size-input\"\n            info={t('common:recipeform.sizeDesc')}\n          />\n          <Field\n            onChange={this.onFieldChange}\n            value={notes}\n            labelname={t('common:recipeform.notes')}\n            name=\"notes\"\n            id=\"nr-recipenotes-input\"\n            textarea\n          />\n          <fieldset className=\"ingredients-fieldset\">\n            <legend>\n              <FormSubHeader subtitle={t('common:recipeform.ing')} />\n            </legend>\n            <IngFieldsHeader />\n            {groupFields}\n            <button\n              className=\"add-ing-group-button\"\n              type=\"button\"\n              onClick={this.onAddGroup}\n            >\n              <Plus />\n              {t('common:recipeform.addIngGroup')}\n            </button>\n          </fieldset>\n\n          <FormSubHeader subtitle={t('common:recipeform.images')} />\n          <RecipeImages images={images} onImageStateUpdate={this.updateImageState} />\n\n          <FormSubHeader />\n          <input type=\"submit\" value={messages.buttonAction} />\n          {submitError && (\n            <p className=\"error-msg\">\n              <AlertCircle />\n              Please complete the required fields.\n            </p>\n          )}\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nRecipeForm.propTypes = {\n  initialIngredients: PropTypes.arrayOf(PropTypes.array),\n  initialGroups: PropTypes.arrayOf(PropTypes.object),\n  initialImages: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n  notes: PropTypes.string,\n  name: PropTypes.string,\n  size: PropTypes.string,\n  fetchUrl: PropTypes.string.isRequired,\n  fetchRecipes: PropTypes.func.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  selectedId: PropTypes.number.isRequired,\n  setSelectedRecipe: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired,\n  sortMethod: PropTypes.string,\n  messages: PropTypes.shape({\n    buttonAction: PropTypes.string,\n    failMessage: PropTypes.string,\n    successMessage: PropTypes.string,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  screen: PropTypes.string.isRequired,\n};\n\nRecipeForm.defaultProps = {\n  initialIngredients: [[{ ...ING_FIELD_BLANK }]],\n  initialGroups: [{ ...ING_GROUP_BLANK }],\n  initialImages: [],\n  notes: '',\n  name: '',\n  size: '',\n  sortMethod: 'update_date',\n};\n\nexport default withTranslation()(withRouter(RecipeForm));\n","import { connect } from 'react-redux';\nimport { fetchRecipes, setNotification, setSelectedRecipe } from '../Actions/index';\nimport RecipeForm from './view';\n\nconst mapStateToProps = state => state;\nconst mapDispatchToProps = {\n  fetchRecipes,\n  setNotification,\n  setSelectedRecipe,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(RecipeForm);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport RecipeForm from '../RecipeForm';\nimport { ING_FIELD_BLANK, ING_GROUP_BLANK } from '../common/initial';\n\nclass NewRecipeForm extends Component {\n  componentDidMount() {\n    const { setSelectedRecipe } = this.props;\n    /* This function is required for the form request to go through properly.\n     * Invariant: maintain selected recipe ID always. When none applicable,\n     * use -1.\n     */\n    setSelectedRecipe(-1);\n  }\n\n  render() {\n    const { t } = this.props;\n    const recipeInfo = {\n      name: '',\n      size: '',\n      ingredients: [[{ ...ING_FIELD_BLANK }]],\n      groups: [{ ...ING_GROUP_BLANK }],\n      notes: '',\n      invalid: { name: false, ingCount: false },\n      images: [],\n    };\n\n    const messages = {\n      buttonAction: t('common:newrecipe.submit'),\n      failMessage: t('common:newrecipe.fail'),\n      successMessage: t('common:newrecipe.success'),\n    };\n\n    return (\n      <Fragment>\n        <RecipeForm\n          initialFormState={recipeInfo}\n          initialIngredients={recipeInfo.ingredients}\n          title={t('common:newrecipe.title')}\n          initialGroups={recipeInfo.groups}\n          notes=\"\"\n          name=\"\"\n          size=\"\"\n          fetchUrl=\"/createnewrecipe\"\n          messages={messages}\n        />\n      </Fragment>\n    );\n  }\n}\n\nNewRecipeForm.propTypes = {\n  setSelectedRecipe: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired,\n};\n\nexport default withTranslation()(NewRecipeForm);\n","import { connect } from 'react-redux';\nimport { fetchRecipes, setSelectedRecipe } from '../Actions/index';\n\nimport NewRecipeForm from './view';\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = {\n  fetchRecipes,\n  setSelectedRecipe,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NewRecipeForm);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport RecipeForm from '../RecipeForm';\nimport { hs, callApi } from '../helpers';\nimport { ING_FIELD_BLANK, ING_GROUP_BLANK } from '../common/initial';\nimport './styles.css';\n\nclass EditRecipeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      form: {\n        ingredients: [[{ ...ING_FIELD_BLANK }]],\n        groups: [{ ...ING_GROUP_BLANK }],\n        info: {\n          name: '',\n          size: '',\n          notes: '',\n        },\n        invalid: { name: false, ingCount: false },\n        images: [],\n      },\n      loadingInfo: true,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match,\n      setSelectedRecipe,\n      selectedId,\n      history,\n      loadingAuth,\n    } = this.props;\n\n    const paramId = +hs.decode(match.params.id);\n    if (selectedId !== paramId) {\n      setSelectedRecipe(paramId);\n    }\n\n    /* Run fetchInfo() when a user first navigates to this page\n     * from elsewhere on the website\n     */\n    if (!loadingAuth) {\n      if (selectedId !== -1) {\n        this.fetchInfo();\n      }\n    }\n\n    /* Redirect page if no recipe is selected or\n     * if no recipe id is passed  as a route parameter.\n     * If hashid decodes a bogus key then it returns 0, so check for that\n     * as well.\n     */\n    if ((!paramId || paramId === 0) && selectedId === -1) {\n      history.push('/');\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      loadingAuth,\n      selectedId,\n    } = this.props;\n\n    /* Run fetchInfo() once when a user first navigates to this page\n     * (not from a different page on the website) and the call needs\n     * to wait until the user is authenticated.\n     */\n    if (prevProps.loadingAuth !== loadingAuth\n      || prevProps.selectedId !== selectedId) {\n      if (!loadingAuth) {\n        if (selectedId !== -1) {\n          this.fetchInfo();\n        }\n      }\n    }\n  }\n\n  fetchInfo() {\n    const { selectedId } = this.props;\n    this.setState({ loadingInfo: true }, () => {\n      callApi(`/getrecipeinfo/${selectedId}`)\n        .then((res) => {\n          /* If no groups are stored in the DB, add one default group\n           */\n          let { groups } = res;\n          if (res.length === 0) {\n            groups = [{ ...ING_GROUP_BLANK }];\n          }\n\n          /* Restructure flat array of ingredient objects into a 2D\n           * array where ingredients are grouped by Group ID\n           */\n          const ings = res.ingredients;\n          let ingGroups = [];\n          ingGroups.push([]);\n          let counter = 0;\n          for (let i = 0; i < ings.length; i++) {\n            if (i !== 0 && ings[i].groupId !== ings[i - 1].groupId) {\n              ingGroups.push([]);\n              counter++;\n            }\n            ingGroups[counter].push(ings[i]);\n          }\n          if (ings.length === 0) {\n            ingGroups = [[{ ...ING_FIELD_BLANK }]];\n          }\n\n          this.setState({\n            form: {\n              groups,\n              ingredients: ingGroups,\n              images: res.images,\n              groupCount: groups.length,\n              info: res.info,\n            },\n            loadingInfo: false,\n            fetchError: false,\n          });\n        })\n        .catch(() => {\n          this.setState({ fetchError: true });\n        });\n    });\n  }\n\n  render() {\n    const { form, loadingInfo, fetchError } = this.state;\n    const { selectedId, t } = this.props;\n    const messages = {\n      buttonAction: t('common:editrecipe.submit'),\n      failMessage: t('common:editrecipe.fail'),\n      successMessage: t('common:editrecipe.success'),\n    };\n\n    if (loadingInfo) {\n      return <p>Loading...</p>;\n    }\n\n    if (fetchError) {\n      return <p>We&apos;re having trouble connecting to our server.</p>;\n    }\n\n    return (\n      <Fragment>\n        <RecipeForm\n          initialFormState={form}\n          title={t('common:editrecipe.title')}\n          initialIngredients={form.ingredients}\n          initialGroups={form.groups}\n          initialImages={form.images}\n          notes={form.info.notes}\n          name={form.info.name}\n          size={form.info.size}\n          fetchUrl={`/updateRecipe/${selectedId}`}\n          messages={messages}\n        />\n      </Fragment>\n    );\n  }\n}\n\nEditRecipeForm.propTypes = {\n  selectedId: PropTypes.number.isRequired,\n  setSelectedRecipe: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired,\n  loadingAuth: PropTypes.bool.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default withTranslation()(EditRecipeForm);\n","import { connect } from 'react-redux';\nimport { fetchRecipes, setSelectedRecipe } from '../Actions/index';\n\nimport EditRecipeForm from './view';\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = {\n  fetchRecipes,\n  setSelectedRecipe,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(EditRecipeForm);\n","import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport StatusInfo from '../common/StatusInfo';\nimport { hs, callApi } from '../helpers';\nimport './styles.css';\n\nclass DeleteRecipe extends Component {\n  constructor(props) {\n    super(props);\n    this.deleteRecipe = this.deleteRecipe.bind(this);\n    this.state = {\n      deleteStatus: '',\n      deleteMessage: '',\n    };\n  }\n\n  componentDidMount() {\n    const { match, setSelectedRecipe } = this.props;\n    const paramId = +hs.decode(match.params.id);\n    setSelectedRecipe(paramId);\n  }\n\n  deleteRecipe = (e) => {\n    const {\n      selectedId,\n      fetchRecipes,\n      sortMethod,\n      history,\n      setNotification,\n    } = this.props;\n\n    e.preventDefault();\n    callApi(`/deleteRecipe/${selectedId}`, {\n      method: 'DELETE',\n    })\n      .then(() => {\n        setNotification('success', 'Successfully deleted recipe.');\n        fetchRecipes(sortMethod);\n        history.push('/');\n      })\n      .catch((err) => {\n        console.error(err);\n        setNotification(\n          'fail',\n          'Failed to delete recipe. Please try again later.',\n        );\n      });\n  }\n\n  render() {\n    const { selectedId, t } = this.props;\n    const { deleteStatus, deleteMessage } = this.state;\n    return (\n      <Fragment>\n        <StatusInfo\n          status={deleteStatus}\n          dynamicMessage={deleteMessage}\n        />\n        <h1 className=\"title\">\n          {t('common:delete.title')}\n        </h1>\n        <p className=\"delete-description\">\n          {t('common:delete.confirm')}\n        </p>\n        <div className=\"confirm-buttons-wrapper\">\n          <button\n            type=\"button\"\n            className=\"confirm-buttons\n            affirmative\"\n            onClick={this.deleteRecipe}\n          >\n            {t('common:delete.yes')}\n          </button>\n          <div>\n            <Link to={`/recipe/${hs.encode(selectedId)}`} className=\"confirm-buttons cancel\">\n              {t('common:delete.cancel')}\n            </Link>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nDeleteRecipe.propTypes = {\n  selectedId: PropTypes.number.isRequired,\n  setSelectedRecipe: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n  fetchRecipes: PropTypes.func.isRequired,\n  sortMethod: PropTypes.string,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nDeleteRecipe.defaultProps = {\n  sortMethod: 'update_date',\n};\n\nexport default withTranslation()(withRouter(DeleteRecipe));\n","import { connect } from 'react-redux';\nimport { setSelectedRecipe, fetchRecipes, setNotification } from '../Actions/index';\nimport DeleteRecipe from './view';\n\nconst mapStateToProps = state => state;\nconst mapDispatchToProps = {\n  setSelectedRecipe,\n  fetchRecipes,\n  setNotification,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DeleteRecipe);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddRecipeButton from '../RecipeInfo/components/AddRecipeButton';\nimport './styles.css';\n\nclass NoSelectedRecipe extends Component {\n  componentDidMount() {\n    const { setSelectedRecipe } = this.props;\n    setSelectedRecipe(-1);\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <Fragment>\n        <AddRecipeButton />\n        <p className=\"nsr-description\">\n          {t('common:message.noselected')}\n        </p>\n      </Fragment>\n    );\n  }\n}\n\nNoSelectedRecipe.propTypes = {\n  setSelectedRecipe: PropTypes.func.isRequired,\n};\n\nexport default withTranslation()(NoSelectedRecipe);\n","import { connect } from 'react-redux';\nimport { setSelectedRecipe, fetchRecipes } from '../Actions/index';\nimport DeleteRecipe from './view';\n\nconst mapStateToProps = state => state;\nconst mapDispatchToProps = {\n  setSelectedRecipe,\n  fetchRecipes,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DeleteRecipe);\n","import React, { Fragment, Component } from 'react';\nimport './styles.css';\n\nclass RecipeInfoErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  render() {\n    const { hasError } = this.state;\n    const { children } = this.props;\n    if (hasError) {\n      return (\n        <Fragment>\n          <h1 className=\"errorboundary-title\">Sorry, something went wrong!</h1>\n          <p className=\"errorboundary-message\">\n            We&apos;re having trouble loading your recipe at the moment.\n            <br />\n            We&apos;re working on it!\n          </p>\n        </Fragment>\n      );\n    }\n\n    return children;\n  }\n}\n\nexport default RecipeInfoErrorBoundary;\n","import React, { Fragment, Component } from 'react';\nimport './styles.css';\n\nclass RecipeListErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  render() {\n    const { hasError } = this.state;\n    const { children } = this.props;\n    if (hasError) {\n      return (\n        <Fragment>\n          <p className=\"errorboundary-message\">\n            Sorry, we&apos;re having trouble loading your recipes.\n          </p>\n        </Fragment>\n      );\n    }\n\n    return children;\n  }\n}\n\nexport default RecipeListErrorBoundary;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport RecipeInfo from '../RecipeInfo';\nimport RecipeList from '../RecipeList';\nimport NewRecipeForm from '../NewRecipeForm';\nimport EditRecipeForm from '../EditRecipeForm';\nimport DeleteRecipe from '../DeleteRecipe';\nimport NoSelectedRecipe from '../NoSelectedRecipe';\nimport StatusInfo from '../common/StatusInfo';\nimport RecipeInfoErrorBoundary from '../errorBoundaries/RecipeInfoErrorBoundary';\nimport RecipeListErrorBoundary from '../errorBoundaries/RecipeListErrorBoundary';\nimport './styles.css';\n\nclass RecipeIndex extends Component {\n  componentDidUpdate(prevProps) {\n    const {\n      fetchRecipes,\n      sortMethod,\n      loadingAuth,\n    } = this.props;\n\n    if (prevProps.loadingAuth !== loadingAuth) {\n      if (!loadingAuth) {\n        fetchRecipes(sortMethod);\n      }\n    }\n  }\n\n  renderMobile() {\n    const { notification } = this.props;\n    return (\n      <div className=\"recipe-everything-wrapper-mobile\">\n        <StatusInfo status={notification.status} message={notification.message} />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={props => (\n              <RecipeListErrorBoundary>\n                <RecipeList {...props} />\n              </RecipeListErrorBoundary>\n            )}\n          />\n          <Route exact path=\"/addRecipe\" component={NewRecipeForm} />\n          <Route exact path=\"/editRecipe/:id\" component={EditRecipeForm} />\n          <Route\n            path=\"/recipe/:id\"\n            render={props => (\n              <RecipeInfoErrorBoundary>\n                <RecipeInfo {...props} />\n              </RecipeInfoErrorBoundary>\n            )}\n          />\n          <Route path=\"/deleteRecipe/:id\" component={DeleteRecipe} />\n        </Switch>\n      </div>\n    );\n  }\n\n  render() {\n    const { notification, screen } = this.props;\n\n    if (screen === 'mobile') {\n      return this.renderMobile();\n    }\n\n    return (\n      <div className=\"recipe-everything-wrapper\">\n        <div id=\"recipe-list\">\n          <RecipeListErrorBoundary>\n            <RecipeList />\n          </RecipeListErrorBoundary>\n        </div>\n        <div id=\"recipe-info\">\n          <StatusInfo status={notification.status} message={notification.message} />\n          <Switch>\n            <Route exact path=\"/addRecipe\" component={NewRecipeForm} />\n            <Route exact path=\"/editRecipe/:id\" component={EditRecipeForm} />\n            <Route\n              path=\"/recipe/:id\"\n              render={props => (\n                <RecipeInfoErrorBoundary>\n                  <RecipeInfo {...props} />\n                </RecipeInfoErrorBoundary>\n              )}\n            />\n            <Route path=\"/deleteRecipe/:id\" component={DeleteRecipe} />\n            <Route exact path=\"/\" component={NoSelectedRecipe} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nRecipeIndex.propTypes = {\n  fetchRecipes: PropTypes.func,\n  sortMethod: PropTypes.string,\n  screen: PropTypes.string.isRequired,\n  notification: PropTypes.shape({\n    status: PropTypes.string,\n    message: PropTypes.string,\n  }).isRequired,\n  loadingAuth: PropTypes.bool.isRequired,\n};\n\nRecipeIndex.defaultProps = {\n  fetchRecipes: null,\n  sortMethod: 'update_date',\n};\n\nexport default RecipeIndex;\n","import { connect } from 'react-redux';\nimport { fetchRecipes, setSelectedRecipe } from '../Actions/index';\n\nimport RecipeIndex from './view';\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = {\n  fetchRecipes,\n  setSelectedRecipe,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(RecipeIndex);\n","import React, { Component } from 'react';\nimport './styles.css';\n\nclass AppErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  render() {\n    const { hasError } = this.state;\n    const { children } = this.props;\n    if (hasError) {\n      return (\n        <div className=\"apperrorboundary-wrapper\">\n          <h1 className=\"title\">\n            Sorry, we&apos;re having some technical difficulties right now.\n          </h1>\n          <p className=\"errorboundary-message\">\n            We&apos;re working on it!\n          </p>\n        </div>\n      );\n    }\n\n    return children;\n  }\n}\n\nexport default AppErrorBoundary;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  login,\n} from '../Actions/index';\n\nclass Login extends Component {\n  componentDidMount() {\n    const { isAuthenticated, login } = this.props;\n    if (!isAuthenticated) {\n      login();\n    }\n  }\n\n  componentDidUpdate() {\n    const { isAuthenticated, history } = this.props;\n    if (isAuthenticated) {\n      history.push('/');\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"mff-lock-container\" />\n    );\n  }\n}\n\nLogin.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  login: PropTypes.func.isRequired,\n};\n\nLogin.defaultProps = {\n};\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = {\n  login,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logout } from '../Actions/index';\n\nclass Logout extends Component {\n  componentDidMount() {\n    const { logout, history } = this.props;\n    logout();\n    history.push('/');\n  }\n\n  render() {\n    return (\n      <div id=\"auth0-lock-wrapper-box\" />\n    );\n  }\n}\n\nLogout.propTypes = {\n  logout: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = {\n  logout,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  signup,\n} from '../Actions/index';\n\nclass Signup extends Component {\n  componentDidMount() {\n    const { isAuthenticated, signup } = this.props;\n    if (!isAuthenticated) {\n      signup();\n    }\n  }\n\n  componentDidUpdate() {\n    const { isAuthenticated, history } = this.props;\n    if (isAuthenticated) {\n      history.push('/');\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"mff-lock-container\" />\n    );\n  }\n}\n\nSignup.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  signup: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nSignup.defaultProps = {\n};\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = {\n  signup,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\n\nclass LangChange extends Component {\n  constructor(props) {\n    super(props);\n    this.onLangSelect = this.onLangSelect.bind(this);\n  }\n\n  onLangSelect(e) {\n    const { i18n } = this.props;\n    if (e.target.value === 'en') {\n      i18n.changeLanguage('en');\n      document.documentElement.setAttribute('lang', 'en');\n    } else if (e.target.value === 'ja') {\n      i18n.changeLanguage('ja', () => {\n        document.documentElement.setAttribute('lang', 'ja');\n      });\n    }\n  }\n\n  render() {\n    const { i18n } = this.props;\n    return (\n      <Fragment>\n        <select\n          className=\"select-lang-dropdown\"\n          value={i18n.language}\n          onChange={this.onLangSelect}\n        >\n          <option value=\"en\">English</option>\n          <option value=\"ja\">Japanese</option>\n        </select>\n      </Fragment>\n    );\n  }\n}\n\nLangChange.propTypes = {\n  t: PropTypes.func.isRequired,\n  i18n: PropTypes.shape({\n    changeLanguage: PropTypes.func.isRequired,\n    language: PropTypes.string.isRequired,\n  }).isRequired,\n\n};\n\nexport default withTranslation()(LangChange);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { ChevronDown } from 'react-feather';\nimport { withTranslation } from 'react-i18next';\nimport LangChange from './components/LangChange';\nimport './styles.css';\n\nclass Welcome extends Component {\n  componentDidMount() {\n  }\n\n  componentDidUpdate() {\n    const { isAuthenticated, history } = this.props;\n    if (isAuthenticated) {\n      history.push('/');\n    }\n  }\n\n  render() {\n    const { t, screen } = this.props;\n    return (\n      <div id=\"welcome\">\n        <header className=\"welcome-header\">\n          <Link className=\"w-main-title-link\" to=\"/welcome\">\n            {t('common:welcome.app-name')}\n          </Link>\n          <LangChange />\n        </header>\n        <section className=\"section-1\">\n          <div className=\"section-title-wrapper\">\n            <h1 className=\"section-title\">\n              {t('common:welcome.big-title')}\n            </h1>\n            <p className=\"section-caption\">\n              {t('common:welcome.big-desc')}\n            </p>\n          </div>\n          <div className=\"links-row\">\n            <Link className=\"welcome-action-unfilled\" to=\"/signup\">\n              {t('common:header.signup')}\n            </Link>\n            <Link className=\"welcome-action-unfilled\" to=\"/login\">\n              {t('common:header.login')}\n            </Link>\n          </div>\n          {(screen !== 'mobile') && (\n            <img\n              className=\"kitchen-table-image\"\n              src=\"/api/welcomeimages/kitchen_table_1x.png\"\n              srcSet=\"/api/welcomeimages/kitchen_table_1x.png 1x,\n                /api/welcomeimages/kitchen_table_2x.png 2x\"\n              alt=\"kitchen table illustration\"\n            />\n          )}\n          {(screen !== 'mobile') && (\n            <img\n              className=\"cookie-desktop-image\"\n              src=\"/api/welcomeimages/desktop_cookie_1x.png\"\n              srcSet=\"/api/welcomeimages/desktop_cookie_1x.png 1x,\n                /api/welcomeimages/desktop_cookie_2x.png 2x\"\n              alt=\"monkey chef illustration\"\n            />\n          )}\n          {(screen === 'mobile') && (\n            <img\n              className=\"cookie-mobile-image\"\n              src=\"/api/welcomeimages/mobile_cookie_1x.png\"\n              srcSet=\"/api/welcomeimages/mobile_cookie_1x.png 1x,\n                /api/welcomeimages/mobile_cookie_2x.png 2x\"\n              alt=\"monkey chef illustration\"\n            />\n          )}\n          {(screen !== 'mobile') && (\n            <img\n              className=\"recipe-corner-image\"\n              src=\"/api/welcomeimages/recipe_corner_1x.png\"\n              srcSet=\"/api/welcomeimages/recipe_corner_1x.png 1x,\n                /api/welcomeimages/recipe_corner_2x.png 2x\"\n              alt=\"abstract recipe illustration\"\n            />\n          )}\n          {(screen !== 'mobile') && (\n            <div className=\"down-button-wrapper-wrapper\">\n              <p className=\"down-button-desc\">{t('common:welcome.scroll')}</p>\n              <a href=\"#section-2\" className=\"down-button-wrapper\">\n                <ChevronDown />\n              </a>\n            </div>\n          )}\n        </section>\n        <section className=\"section-2\">\n          <h1 className=\"section-title regular-section-title\" id=\"section-2\">\n            {t('common:welcome.features')}\n          </h1>\n          <div className=\"w-feature-row-wrapper\">\n            <div className=\"w-feature-wrapper\">\n              <img\n                className=\"w-feature-image\"\n                src=\"/api/welcomeimages/complexity_1x.png\"\n                srcSet=\"/api/welcomeimages/complexity_1x.png 1x,\n                  /api/welcomeimages/complexity_2x.png 2x\"\n                alt=\"ramen illustration\"\n              />\n              <h3 className=\"w-feature-section-title\">\n                {t('common:welcome.complex-title')}\n              </h3>\n              <p className=\"w-feature-description\">\n                {t('common:welcome.complex-desc')}\n              </p>\n            </div>\n            <div className=\"w-feature-wrapper\">\n              <img\n                className=\"w-feature-image\"\n                src=\"/api/welcomeimages/mobility_1x.png\"\n                srcSet=\"/api/welcomeimages/mobility_1x.png 1x,\n                  /api/welcomeimages/mobility_2x.png 2x\"\n                alt=\"pizza in single slice wrapper illustration\"\n              />\n              <h3 className=\"w-feature-section-title\">\n                {t('common:welcome.mobile-title')}\n              </h3>\n              <p className=\"w-feature-description\">\n                {t('common:welcome.mobile-desc')}\n              </p>\n            </div>\n            <div className=\"w-feature-wrapper\">\n              <img\n                className=\"w-feature-image\"\n                src=\"/api/welcomeimages/sortsearch_1x.png\"\n                srcSet=\"/api/welcomeimages/sortsearch_1x.png 1x,\n                  /api/welcomeimages/sortsearch_2x.png 2x\"\n                alt=\"cupcakes illustration\"\n              />\n              <h3 className=\"w-feature-section-title\">\n                {t('common:welcome.ss-title')}\n              </h3>\n              <p className=\"w-feature-description\">\n                {t('common:welcome.ss-desc')}\n              </p>\n            </div>\n          </div>\n        </section>\n        <section className=\"section-3\">\n          <h1 className=\"section-title regular-section-title\" id=\"section-2\">\n            {t('common:welcome.screenshots')}\n          </h1>\n          <div className=\"w-sshot-wrapper-wrapper\">\n            <div className=\"w-sshot-wrapper\">\n              <img\n                className=\"w-sshot-image\"\n                src=\"/api/welcomeimages/listview_1x.png\"\n                srcSet=\"/api/welcomeimages/listview_1x.png 1x,\n                  /api/welcomeimages/listview_2x.png 2x\"\n                alt=\"cupcakes illustration\"\n              />\n              <div className=\"w-sshot-info\">\n                <h3 className=\"w-sshot-title\">{t('common:welcome.view-title')}</h3>\n                <p className=\"w-sshot-desc\">{t('common:welcome.view-desc')}</p>\n              </div>\n            </div>\n            <div className=\"w-sshot-wrapper\">\n              <img\n                className=\"w-sshot-image\"\n                src=\"/api/welcomeimages/editview_1x.png\"\n                srcSet=\"/api/welcomeimages/editview_1x.png 1x,\n                  /api/welcomeimages/editview_2x.png 2x\"\n                alt=\"cupcakes illustration\"\n              />\n              <div className=\"w-sshot-info\">\n                <h3 className=\"w-sshot-title\">{t('common:welcome.edit-title')}</h3>\n                <p className=\"w-sshot-desc\">{t('common:welcome.edit-desc')}</p>\n              </div>\n            </div>\n          </div>\n        </section>\n        <footer className=\"welcome-footer\">\n          <img\n            src=\"/api/welcomeimages/github.svg\"\n            className=\"footer-gh-logo\"\n            alt=\"github logo\"\n          />\n          <a href=\"https://github.com/meguna/inthemoodforfood\">\n            {t('common:welcome.github')}\n          </a>\n          <p>{t('common:welcome.cp')}</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nWelcome.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  t: PropTypes.func.isRequired,\n};\n\nWelcome.defaultProps = {\n};\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = {\n  Welcome,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withTranslation()(Welcome));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { X } from 'react-feather';\nimport { withTranslation } from 'react-i18next';\nimport Auth0Client from '../../auth/Auth';\nimport StatusInfo from '../../common/StatusInfo';\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n    const { i18n } = this.props;\n    this.state = {\n      langVal: i18n.language,\n      fieldVal: '',\n      errorStatus: {\n        error: false,\n        message: '',\n        status: '',\n      },\n    };\n    this.handlePassChange = this.handlePassChange.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onLangSelect = this.onLangSelect.bind(this);\n  }\n\n  onLangSelect(e) {\n    const { i18n } = this.props;\n    this.setState({\n      langVal: e.target.value,\n    });\n    if (e.target.value === 'en') {\n      i18n.changeLanguage('en');\n      document.documentElement.setAttribute('lang', 'en');\n    } else if (e.target.value === 'en') {\n      i18n.changeLanguage('ja');\n      document.documentElement.setAttribute('lang', 'ja');\n    }\n  }\n\n  handlePassChange(e) {\n    this.setState({\n      fieldVal: e.target.value,\n    });\n  }\n\n  handleSubmit(e) {\n    const { fieldParamName, toggleModal, t } = this.props;\n    const { fieldVal, langVal } = this.state;\n    e.preventDefault();\n    let userData = {\n      [fieldParamName]: fieldVal,\n    };\n    if (fieldParamName === 'language') {\n      userData = {\n        nickname: langVal,\n      };\n    }\n    Auth0Client.patchUserData(userData)\n      .then(() => {\n        if (fieldParamName === 'language') {\n          window.location.reload();\n        }\n        toggleModal(true);\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({\n          errorStatus: {\n            error: true,\n            message: t('common:error.general'),\n            status: 'fail',\n          },\n        });\n      });\n  }\n\n  closeModal() {\n    const { toggleModal } = this.props;\n    toggleModal();\n  }\n\n  render() {\n    const { fieldVal, errorStatus, langVal } = this.state;\n    const { desc, title, t, fieldParamName } = this.props;\n    let formInputElem = null;\n    if (fieldParamName === 'language') {\n      formInputElem = (\n        <select\n          className=\"select-lang-dropdown-settings modal-input\"\n          defaultValue={langVal}\n          onChange={this.onLangSelect}\n        >\n          <option value=\"en\">English</option>\n          <option value=\"ja\">Japanese</option>\n        </select>\n      );\n    } else {\n      formInputElem = (\n        <input\n          className=\"modal-input\"\n          type=\"text\"\n          placeholder=\"email\"\n          value={fieldVal}\n          onChange={this.handlePassChange}\n        />\n      );\n    }\n    return (\n      <div className=\"check-pass-modal\">\n        {errorStatus.error && (\n          <StatusInfo\n            status={errorStatus.status}\n            message={errorStatus.message}\n          />\n        )}\n        <button\n          className=\"close-modal-button\"\n          type=\"button\"\n          onClick={this.closeModal}\n          onKeyDown={this.closeModal}\n          tabIndex=\"-1\"\n        >\n          <X />\n        </button>\n        <h2>{title}</h2>\n        <p>{desc}</p>\n        <form onSubmit={this.handleSubmit}>\n          {formInputElem}\n          <input\n            type=\"submit\"\n            className=\"modal-submit\"\n            value={t('common:actions.submit')}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n  fieldParamName: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  desc: PropTypes.string,\n  t: PropTypes.func.isRequired,\n  i18n: PropTypes.shape({\n    changeLanguage: PropTypes.func.isRequired,\n    language: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nModal.defaultProps = {\n  desc: '',\n};\n\nexport default withTranslation()(Modal);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Auth0Client from '../auth/Auth';\nimport Modal from './components/Modal';\nimport './styles.css';\n\nclass AccountSettings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      language: '',\n      isModalOpen: false,\n      modal: {\n        title: '',\n        fieldParamName: '',\n      },\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.setEmailModal = this.setEmailModal.bind(this);\n    this.setNameModal = this.setNameModal.bind(this);\n    this.setLangModal = this.setLangModal.bind(this);\n  }\n\n  componentDidMount() {\n    const { setSelectedRecipe, loadingAuth } = this.props;\n\n    setSelectedRecipe(-1);\n\n    if (!loadingAuth) {\n      const profile = Auth0Client.getProfile();\n      console.log(profile);\n      this.setState({\n        name: profile.name,\n        email: profile.email,\n        language: profile.nickname,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { loadingAuth } = this.props;\n\n    if (prevProps.loadingAuth !== loadingAuth) {\n      const profile = Auth0Client.getProfile();\n      if (!loadingAuth) {\n        this.setState({\n          name: profile.name,\n          email: profile.email,\n          language: profile.nickname,\n        });\n      }\n    }\n  }\n\n  setProfile() {\n    const profile = Auth0Client.getProfile();\n    this.setState({\n      name: profile.name,\n      email: profile.email,\n      language: profile.nickname,\n    });\n  }\n\n  setEmailModal() {\n    const { t } = this.props;\n    this.setState({\n      modal: {\n        title: t('common:account.emailchange'),\n        fieldParamName: 'email',\n      },\n    }, () => {\n      this.toggleModal();\n    });\n  }\n\n  setNameModal() {\n    const { t } = this.props;\n    this.setState({\n      modal: {\n        title: t('common:account.namechange'),\n        fieldParamName: 'name',\n      },\n    }, () => {\n      this.toggleModal();\n    });\n  }\n\n  setLangModal() {\n    const { t } = this.props;\n    this.setState({\n      modal: {\n        title: t('common:account.langchange'),\n        fieldParamName: 'language',\n      },\n    }, () => {\n      this.toggleModal();\n    });\n  }\n\n  toggleModal(shouldResetProfile) {\n    this.setState(prevState => ({\n      isModalOpen: !prevState.isModalOpen,\n    }));\n    if (shouldResetProfile) {\n      this.setProfile();\n    }\n  }\n\n  render() {\n    const { name, email, language, isModalOpen, modal } = this.state;\n    const { t } = this.props;\n    let langName = '';\n    if (language === 'en') {\n      langName = 'English';\n    } else if (language === 'ja') {\n      langName = '日本語';\n    }\n\n    return (\n      <div id=\"profile-page-wrapper\" className={isModalOpen ? 'modal-open-bkgd' : ''}>\n        {isModalOpen && (\n          <Modal\n            toggleModal={this.toggleModal}\n            fieldParamName={modal.fieldParamName}\n            title={modal.title}\n          />\n        )}\n        <h1 className=\"title\">\n          {t('common:account.title')}\n        </h1>\n        <div className=\"account-info-group\">\n          <p className=\"account-info-label\">{t('common:account.language')}</p>\n          <p className=\"account-info-desc\">{langName}</p>\n          <input\n            className=\"account-change-button\"\n            type=\"button\"\n            value={t('common:account.change')}\n            onClick={this.setLangModal}\n          />\n        </div>\n        <div className=\"account-info-group\">\n          <p className=\"account-info-label\">{t('common:account.name')}</p>\n          <p className=\"account-info-desc\">{name}</p>\n          <input\n            className=\"account-change-button\"\n            type=\"button\"\n            value={t('common:account.change')}\n            onClick={this.setNameModal}\n          />\n        </div>\n        <div className=\"account-info-group\">\n          <p className=\"account-info-label\">{t('common:account.email')}</p>\n          <p className=\"account-info-desc\">{email}</p>\n          <input\n            className=\"account-change-button\"\n            type=\"button\"\n            value={t('common:account.change')}\n            onClick={this.setEmailModal}\n          />\n        </div>\n        <div className=\"account-info-group\">\n          <p className=\"account-info-label\">{t('common:account.password')}</p>\n          <input\n            className=\"account-change-button\"\n            type=\"button\"\n            value={t('common:account.reset')}\n            onClick={() => { Auth0Client.resetPassword(email); }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nAccountSettings.propTypes = {\n  loadingAuth: PropTypes.bool.isRequired,\n  setSelectedRecipe: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default withTranslation()(AccountSettings);\n","import { connect } from 'react-redux';\nimport { setSelectedRecipe, fetchRecipes, setNotification } from '../Actions/index';\nimport DeleteRecipe from './view';\n\nconst mapStateToProps = state => state;\nconst mapDispatchToProps = {\n  setSelectedRecipe,\n  fetchRecipes,\n  setNotification,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DeleteRecipe);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport './styles.css';\n\nclass AuthButton extends Component {\n  componentDidMount() {\n\n  }\n\n  render() {\n    const { isAuthenticated, loadingAuth, t } = this.props;\n    if (!loadingAuth) {\n      if (!isAuthenticated) {\n        return (\n          <div className=\"auth-button-wrapper\">\n            <Link className=\"auth-button-link\" to=\"/login\">\n              {t('common:header.login')}\n            </Link>\n          </div>\n        );\n      }\n      return (\n        <div className=\"auth-button-wrapper\">\n          <Link className=\"auth-button-link\" to=\"/account\">\n            {t('common:header.account')}\n          </Link>\n          <Link className=\"auth-button-link\" to=\"/logout\">\n            {t('common:header.logout')}\n          </Link>\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nAuthButton.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  loadingAuth: PropTypes.bool.isRequired,\n  t: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => state;\n\nexport default connect(mapStateToProps)(withTranslation()(AuthButton));\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Menu, X } from 'react-feather';\nimport AuthButton from '../auth/AuthButton';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMenuOpen: false,\n    };\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  toggleMenu() {\n    this.setState(prevState => ({\n      isMenuOpen: !prevState.isMenuOpen,\n    }));\n  }\n\n  renderMenuItems() {\n    const { loadingAuth, isAuthenticated, t } = this.props;\n    if (!loadingAuth) {\n      if (!isAuthenticated) {\n        return (\n          <div className=\"menu-items-wrapper\">\n            <Link className=\"menu-item\" to=\"/login\" onClick={this.toggleMenu}>\n              {t('common:header.login')}\n            </Link>\n          </div>\n        );\n      }\n      return (\n        <Fragment>\n          <Link className=\"menu-item\" to=\"/account\" onClick={this.toggleMenu}>\n            {t('common:header.account')}\n          </Link>\n          <Link className=\"menu-item\" to=\"/logout\" onClick={this.toggleMenu}>\n            {t('common:header.logout')}\n          </Link>\n        </Fragment>\n      );\n    }\n    return null;\n  }\n\n  renderMobile() {\n    const { isMenuOpen } = this.state;\n    return (\n      <div className=\"mobile-header-wrapper\">\n        <header className=\"app-main-header\">\n          <Link className=\"app-main-header-title\" to=\"/\">\n            Foodnotes\n          </Link>\n          <button\n            type=\"button\"\n            onClick={this.toggleMenu}\n            onKeyDown={this.toggleMenu}\n            tabIndex=\"-1\"\n          >\n            {!isMenuOpen && <Menu color=\"white\" />}\n            {isMenuOpen && <X color=\"white\" />}\n          </button>\n        </header>\n        {isMenuOpen && this.renderMenuItems()}\n      </div>\n    );\n  }\n\n  render() {\n    const { location, screen } = this.props;\n    if (location.pathname === '/welcome' || location.pathname === 'logout') {\n      return null;\n    }\n    if (screen === 'mobile') {\n      return this.renderMobile();\n    }\n\n    /* default desktop header */\n    return (\n      <Fragment>\n        <header className=\"app-main-header\">\n          <Link className=\"app-main-header-title\" to=\"/\">\n            Foodnotes\n          </Link>\n          <AuthButton />\n        </header>\n      </Fragment>\n    );\n  }\n}\n\nHeader.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n  loadingAuth: PropTypes.bool.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  t: PropTypes.func.isRequired,\n  screen: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => state;\n\nexport default connect(mapStateToProps)(withTranslation()(withRouter(Header)));\n","import React from 'react';\nimport './App.css';\nimport { Route, BrowserRouter, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport RecipeIndex from './modules/RecipeIndex';\nimport AppErrorBoundary from './modules/errorBoundaries/AppErrorBoundary';\nimport Login from './modules/auth/Login';\nimport Logout from './modules/auth/Logout';\nimport Signup from './modules/auth/Signup';\nimport Welcome from './modules/Welcome';\nimport AccountSettings from './modules/AccountSettings';\nimport Header from './modules/common/Header';\nimport Auth0Client from './modules/auth/Auth';\n\nexport const MOBILE_THRESHOLD = 768;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleResize = this.handleResize.bind(this);\n  }\n\n  componentDidMount() {\n    const { checkAuthStatus, fetchRecipes, sortMethod } = this.props;\n\n    const cb = () => {\n      const { i18n } = this.props;\n      fetchRecipes(sortMethod);\n      /* language is stored in as the \"nickname\" parameter. See longer\n       * explanation in Auth.js\n       */\n      const { nickname: lang } = Auth0Client.getProfile();\n      i18n.changeLanguage(lang);\n    };\n    checkAuthStatus(cb);\n    this.handleResize();\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  handleResize() {\n    const { setScreen } = this.props;\n    if (window.innerWidth < MOBILE_THRESHOLD) {\n      setScreen('mobile');\n    } else {\n      setScreen('desktop');\n    }\n  }\n\n  render() {\n    const { loadingAuth, isAuthenticated } = this.props;\n    if (loadingAuth) {\n      return null;\n    }\n    return (\n      <div className=\"app\">\n        <BrowserRouter>\n          {!loadingAuth && !isAuthenticated && (\n            <Redirect to=\"/welcome\" />\n          )}\n          <Header />\n          <Switch>\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/logout\" component={Logout} />\n            <Route exact path=\"/welcome\" component={Welcome} />\n            <Route exact path=\"/account\" component={AccountSettings} />\n            <Route\n              path=\"/\"\n              render={props => (\n                <AppErrorBoundary>\n                  <RecipeIndex {...props} />\n                </AppErrorBoundary>\n              )}\n            />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  setScreen: PropTypes.func.isRequired,\n  checkAuthStatus: PropTypes.func.isRequired,\n  fetchRecipes: PropTypes.func.isRequired,\n  sortMethod: PropTypes.string.isRequired,\n  loadingAuth: PropTypes.bool.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  i18n: PropTypes.shape({\n    changeLanguage: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default withTranslation('common')(App);\n","import { connect } from 'react-redux';\nimport { login, checkAuthStatus, fetchRecipes, setScreen } from './modules/Actions/index';\nimport App from './AppView';\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = { login, checkAuthStatus, fetchRecipes, setScreen };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  FETCH_RECIPES_START,\n  FETCH_RECIPES_SUCCESS,\n  FETCH_RECIPES_FAILURE,\n  FETCH_MORE_RECIPES_START,\n  FETCH_MORE_RECIPES_SUCCESS,\n  FETCH_MORE_RECIPES_FAILURE,\n  FETCH_QS_START,\n  FETCH_QS_SUCCESS,\n  FETCH_MORE_QS_SUCCESS,\n  FETCH_QS_FAILURE,\n  SET_SELECTED_RECIPE,\n  SET_NOTIFICATION_DETAILS,\n  AUTH_START,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGOUT_SUCCESS,\n  AUTH_NOT_LOGGED_IN,\n  SET_SCREEN,\n} from '../Actions/ActionTypes';\n\nconst INITIAL_STATE = {\n  recipes: [],\n  selectedId: -1,\n  error: null,\n  loading: false,\n  listOffset: 0,\n  sortMethod: 'update_date',\n  notification: {\n    message: '',\n    status: '',\n  },\n  loadingAuth: true,\n  isAuthenticated: false,\n  profile: null,\n  noMoreResults: false,\n  screen: 'desktop',\n};\n\nconst LIST_COUNT_THRESHOLD = 5;\n\nconst reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case FETCH_RECIPES_START: {\n    return {\n      ...state,\n      error: null,\n      loading: true,\n    };\n  }\n  case FETCH_RECIPES_SUCCESS: {\n    return {\n      ...state,\n      recipes: [...action.payload],\n      error: null,\n      loading: false,\n      listOffset: action.payload.length,\n      noMoreResults: (action.payload.length < LIST_COUNT_THRESHOLD),\n    };\n  }\n  case FETCH_MORE_RECIPES_START: {\n    return {\n      ...state,\n      error: null,\n      loading: true,\n      sortMethod: action.payload,\n    };\n  }\n  case FETCH_MORE_RECIPES_SUCCESS: {\n    return {\n      ...state,\n      recipes: [...state.recipes, ...action.payload],\n      error: null,\n      loading: false,\n      listOffset: state.recipes.length + action.payload.length,\n      noMoreResults: (action.payload.length < LIST_COUNT_THRESHOLD),\n    };\n  }\n  case SET_SELECTED_RECIPE: {\n    return {\n      ...state,\n      selectedId: action.payload,\n    };\n  }\n  case FETCH_QS_FAILURE:\n  case FETCH_RECIPES_FAILURE:\n  case FETCH_MORE_RECIPES_FAILURE:\n    console.error(action.payload);\n    return {\n      ...state,\n      error: true,\n      loading: false,\n      loadingAuth: false,\n    };\n  case FETCH_QS_START:\n    return {\n      ...state,\n      error: null,\n      loading: true,\n      sortMethod: action.payload,\n    };\n  case FETCH_QS_SUCCESS: {\n    return {\n      ...state,\n      recipes: [...action.payload],\n      error: null,\n      loading: false,\n      listOffset: action.payload.length,\n      noMoreResults: (action.payload.length < LIST_COUNT_THRESHOLD),\n    };\n  }\n  case FETCH_MORE_QS_SUCCESS: {\n    return {\n      ...state,\n      recipes: [...state.recipes, ...action.payload],\n      error: null,\n      loading: false,\n      listOffset: state.recipes.length + action.payload.length,\n      noMoreResults: (action.payload.length < LIST_COUNT_THRESHOLD),\n    };\n  }\n  case LOGIN_FAILURE:\n    return {\n      ...state,\n      error: false,\n      loading: false,\n      loadingAuth: false,\n      isAuthenticated: false,\n    };\n  case SET_NOTIFICATION_DETAILS:\n    return {\n      ...state,\n      notification: {\n        message: action.payloadMessage,\n        status: action.payloadStatus,\n      },\n    };\n  case AUTH_START:\n    return {\n      ...state,\n      loadingAuth: true,\n      error: null,\n    };\n  case AUTH_NOT_LOGGED_IN:\n    return {\n      ...state,\n      loadingAuth: false,\n    };\n  case LOGIN_SUCCESS:\n    return {\n      ...state,\n      loadingAuth: false,\n      isAuthenticated: true,\n      error: null,\n    };\n  case LOGOUT_SUCCESS:\n    return {\n      ...state,\n      isAuthenticated: false,\n      error: null,\n    };\n  case SET_SCREEN:\n    if (action.payload !== 'desktop' && action.payload !== 'mobile') {\n      console.error('invalid input');\n      return state;\n    }\n    return {\n      ...state,\n      screen: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nimport rootReducer from './modules/Reducers';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}